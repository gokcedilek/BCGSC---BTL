**Description of Physlr:**
Physlr is a software program that aims to output a mapping of chromosomes or DNA molecules, which can be used for their assembly. 
Physlr uses a dataset of reads (DNA sequences) generated by linked read sequencing, which is a sequencing technology that assigns identifier barcodes to each read of sequenced DNA fragments (fragment = a smaller piece of a large DNA molecule).
The condition for assigning the barcodes is, the reads that come from the same long DNA molecule (molecule = a smaller piece of a whole chromosome), will get the same barcode.
This barcode to molecule mapping enables us to assemble larger pieces of DNA molecules, using first barcode, and then molecule overlap information. 
However, a core challenge is, barcodes are reused for different molecules, and this makes the job a difficult overlap problem to tackle.
The idea for navigating the barcode and molecule overlap graphs is assigning multiple minimizers (explained below) to each barcode, and connecting the barcode nodes in the graph with an edge which is a weight equal to the number of shared minimizers between a pair of barcodes.
A minimizer is a 64 bit integer whose value is determined by a hash function; at least one minimizer is assigned to every read (depending on some parameters) based on the substrings of the read.
Physlr is a modular tool that is composed of multiple stages, and during my Co-op term at the Bioinformatics Technology Lab, the stage of Physlr that I was involved with was filtering outlier barcodes and minimizers, before building barcode and molecule overlap graphs.

**Description of my work for Physlr** - The edge cases we consider before moving onto building the barcode and molecule overlap graphs, and why we do the barcode and minimizer filtering stages:


  
