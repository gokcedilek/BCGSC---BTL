nohup: ignoring input
make: Entering directory `/projects/btl/gdilek/physlr/data'
pigz -p16 -cd f1chr2R.fq.gz | command gtime -v -o f1chr2R.indexlr.physlr.tsv.time ../src/physlr-indexlr -k32 -w32 -o f1chr2R.indexlr.physlr.tsv -
command gtime -v -o f1chr2R.indexlr.n100-1000.physlr.tsv.time ../src/physlr-filter-barcodes -k32 -w32 -n100 -N1000 f1chr2R.indexlr.physlr.tsv >f1chr2R.indexlr.n100-1000.physlr.tsv
Removed 50961814 minimizers that occur once of 59070578 (86.3%)
Discarded 481618 barcodes with too few minimizers of 763635 (63.1%)
Discarded 120354 barcodes with too many minimizers of 763635 (15.8%)
Wrote 161663 barcodes
awk 'BEGIN { print "Minimizers" } { print NF - 1 }' f1chr2R.indexlr.n100-1000.physlr.tsv >f1chr2R.indexlr.n100-1000.physlr.mxperbx.tsv
Rscript -e 'rmarkdown::render("plot-mxperbx.rmd", "html_document", "f1chr2R.indexlr.n100-1000.physlr.mxperbx.tsv.html", params = list(input_tsv="f1chr2R.indexlr.n100-1000.physlr.mxperbx.tsv"))'


processing file: plot-mxperbx.rmd
  |                                                                         |                                                                 |   0%  |                                                                         |......                                                           |  10%
  ordinary text without R code

  |                                                                         |.............                                                    |  20%
label: setup
  |                                                                         |....................                                             |  30%
  ordinary text without R code

  |                                                                         |..........................                                       |  40%
label: read
  |                                                                         |................................                                 |  50%
  ordinary text without R code

  |                                                                         |.......................................                          |  60%
label: boxplot-statistics
  |                                                                         |..............................................                   |  70%
  ordinary text without R code

  |                                                                         |....................................................             |  80%
label: minimizers-histogram
  |                                                                         |..........................................................       |  90%
  ordinary text without R code

  |                                                                         |.................................................................| 100%
label: save-plot

output file: plot-mxperbx.knit.md

/usr/bin/pandoc +RTS -K512m -RTS plot-mxperbx.utf8.md --to html4 --from markdown+autolink_bare_uris+ascii_identifiers+tex_math_single_backslash --output f1chr2R.indexlr.n100-1000.physlr.mxperbx.tsv.html --smart --email-obfuscation none --self-contained --standalone --section-divs --template /gsc/btl/linuxbrew/lib/R/3.5/site-library/rmarkdown/rmd/h/default.html --no-highlight --variable highlightjs=1 --variable 'theme:bootstrap' --include-in-header /var/tmp/RtmpZPyaQi/rmarkdown-str100c22d5b8574.html --mathjax --variable 'mathjax-url:https://mathjax.rstudio.com/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML' 

Output created: f1chr2R.indexlr.n100-1000.physlr.mxperbx.tsv.html
Warning message:
In grDevices::png(f) : unable to open connection to X11 display ''
env PYTHONPATH=.. pypy3 ../bin/physlr count-minimizers f1chr2R.indexlr.n100-1000.physlr.tsv >f1chr2R.indexlr.n100-1000.physlr.depth.tsv
0 Reading f1chr2R.indexlr.n100-1000.physlr.tsv
 0.0% 00:00 ETA ?            2.2% 00:01 ETA 00:44 ▏          4.5% 00:02 ETA 00:43 ▍          6.5% 00:03 ETA 00:42 ▋          8.8% 00:04 ETA 00:41 ▉         11.1% 00:05 ETA 00:40 █         13.5% 00:06 ETA 00:38 █▎        15.7% 00:07 ETA 00:37 █▌        18.0% 00:08 ETA 00:36 █▊        20.4% 00:09 ETA 00:35 ██        22.5% 00:10 ETA 00:34 ██▎       24.9% 00:11 ETA 00:33 ██▍       27.0% 00:12 ETA 00:32 ██▋       29.4% 00:13 ETA 00:31 ██▉       31.5% 00:14 ETA 00:30 ███▏      33.9% 00:15 ETA 00:29 ███▍      36.3% 00:16 ETA 00:28 ███▋      38.6% 00:17 ETA 00:26 ███▊      41.0% 00:18 ETA 00:25 ████      43.4% 00:19 ETA 00:24 ████▎     45.4% 00:20 ETA 00:24 ████▌     47.9% 00:21 ETA 00:22 ████▊     50.2% 00:22 ETA 00:21 █████     52.6% 00:23 ETA 00:20 █████▎    55.0% 00:24 ETA 00:19 █████▍    57.3% 00:25 ETA 00:18 █████▋    59.7% 00:26 ETA 00:17 █████▉    62.0% 00:27 ETA 00:16 ██████▏   64.2% 00:28 ETA 00:15 ██████▍   66.6% 00:29 ETA 00:14 ██████▋   69.0% 00:30 ETA 00:13 ██████▉   71.4% 00:31 ETA 00:12 ███████▏  73.7% 00:32 ETA 00:11 ███████▎  76.1% 00:33 ETA 00:10 ███████▌  78.4% 00:34 ETA 00:09 ███████▊  80.8% 00:35 ETA 00:08 ████████  83.1% 00:36 ETA 00:07 ████████▎ 85.5% 00:37 ETA 00:06 ████████▌ 87.9% 00:38 ETA 00:05 ████████▊ 90.1% 00:39 ETA 00:04 █████████ 92.6% 00:40 ETA 00:03 █████████▎95.0% 00:41 ETA 00:02 █████████▍97.4% 00:42 ETA 00:01 █████████▋99.7% 00:43 ETA 00:00 █████████▉100.0% 00:43 ETA 00:00 ██████████
43 Read f1chr2R.indexlr.n100-1000.physlr.tsv
 0.0% 00:00 ETA ?            2.1% 00:01 ETA 00:46 ▏          4.0% 00:02 ETA 00:46 ▍          5.8% 00:03 ETA 00:45 ▌          7.5% 00:04 ETA 00:46 ▋          9.4% 00:05 ETA 00:45 ▉         11.5% 00:06 ETA 00:44 █▏        13.4% 00:07 ETA 00:43 █▎        15.2% 00:08 ETA 00:42 █▌        17.2% 00:09 ETA 00:42 █▋        19.0% 00:10 ETA 00:41 █▉        20.9% 00:11 ETA 00:40 ██        22.7% 00:12 ETA 00:40 ██▎       24.7% 00:13 ETA 00:39 ██▍       26.1% 00:14 ETA 00:40 ██▌       28.0% 00:15 ETA 00:38 ██▊       30.0% 00:16 ETA 00:37 ██▉       31.9% 00:17 ETA 00:36 ███▏      33.5% 00:18 ETA 00:38 ███▎      35.4% 00:19 ETA 00:36 ███▌      37.4% 00:20 ETA 00:35 ███▋      39.4% 00:21 ETA 00:33 ███▉      41.3% 00:22 ETA 00:32 ████▏     43.3% 00:23 ETA 00:30 ████▎     45.0% 00:24 ETA 00:30 ████▌     47.0% 00:25 ETA 00:29 ████▋     49.0% 00:26 ETA 00:27 ████▉     51.1% 00:27 ETA 00:26 █████     53.1% 00:28 ETA 00:25 █████▎    55.1% 00:29 ETA 00:23 █████▌    56.9% 00:30 ETA 00:23 █████▋    58.7% 00:31 ETA 00:22 █████▊    60.7% 00:32 ETA 00:21 ██████    62.6% 00:33 ETA 00:20 ██████▎   64.6% 00:34 ETA 00:18 ██████▍   66.5% 00:35 ETA 00:17 ██████▋   68.4% 00:36 ETA 00:16 ██████▊   70.3% 00:37 ETA 00:15 ███████   72.2% 00:38 ETA 00:14 ███████▏  74.1% 00:39 ETA 00:13 ███████▍  76.0% 00:40 ETA 00:12 ███████▌  77.9% 00:41 ETA 00:11 ███████▊  79.8% 00:42 ETA 00:10 ███████▉  81.8% 00:43 ETA 00:09 ████████▏ 83.7% 00:44 ETA 00:08 ████████▎ 85.6% 00:45 ETA 00:07 ████████▌ 87.5% 00:46 ETA 00:06 ████████▊ 89.4% 00:47 ETA 00:05 ████████▉ 91.3% 00:48 ETA 00:04 █████████▏93.2% 00:49 ETA 00:03 █████████▎95.1% 00:51 ETA 00:02 █████████▌97.0% 00:52 ETA 00:01 █████████▋99.0% 00:53 ETA 00:00 █████████▉100.0% 00:53 ETA 00:00 ██████████
97 Counted 5129974 minimizers
 0.0% 00:00 ETA ?           90.0% 00:01 ETA 00:00 ████████▉ 100.0% 00:01 ETA 00:00 ██████████
99 Wrote 2809075 minimizers
Rscript -e 'rmarkdown::render("plot-depth.rmd", "html_document", "f1chr2R.indexlr.n100-1000.physlr.depth.tsv.html", params = list(input_tsv="f1chr2R.indexlr.n100-1000.physlr.depth.tsv"))'


processing file: plot-depth.rmd
  |                                                                         |                                                                 |   0%  |                                                                         |......                                                           |  10%
  ordinary text without R code

  |                                                                         |.............                                                    |  20%
label: setup
  |                                                                         |....................                                             |  30%
  ordinary text without R code

  |                                                                         |..........................                                       |  40%
label: read
  |                                                                         |................................                                 |  50%
  ordinary text without R code

  |                                                                         |.......................................                          |  60%
label: boxplot-statistics
  |                                                                         |..............................................                   |  70%
  ordinary text without R code

  |                                                                         |....................................................             |  80%
label: depth-histogram
  |                                                                         |..........................................................       |  90%
  ordinary text without R code

  |                                                                         |.................................................................| 100%
label: save-plot

output file: plot-depth.knit.md

/usr/bin/pandoc +RTS -K512m -RTS plot-depth.utf8.md --to html4 --from markdown+autolink_bare_uris+ascii_identifiers+tex_math_single_backslash --output f1chr2R.indexlr.n100-1000.physlr.depth.tsv.html --smart --email-obfuscation none --self-contained --standalone --section-divs --template /gsc/btl/linuxbrew/lib/R/3.5/site-library/rmarkdown/rmd/h/default.html --no-highlight --variable highlightjs=1 --variable 'theme:bootstrap' --include-in-header /var/tmp/RtmpsPmiVC/rmarkdown-str1012936346099.html --mathjax --variable 'mathjax-url:https://mathjax.rstudio.com/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML' 

Output created: f1chr2R.indexlr.n100-1000.physlr.depth.tsv.html
Warning message:
In grDevices::png(f) : unable to open connection to X11 display ''
command gtime -v -o f1chr2R.indexlr.n100-1000.c2-x.physlr.tsv.time env PYTHONPATH=.. pypy3 ../bin/physlr filter-minimizers f1chr2R.indexlr.n100-1000.physlr.tsv >f1chr2R.indexlr.n100-1000.c2-x.physlr.tsv
0 Reading f1chr2R.indexlr.n100-1000.physlr.tsv
 0.0% 00:00 ETA ?            2.2% 00:01 ETA 00:45 ▏          4.4% 00:02 ETA 00:44 ▍          6.6% 00:03 ETA 00:43 ▋          8.8% 00:04 ETA 00:41 ▉         11.2% 00:05 ETA 00:40 █         13.5% 00:06 ETA 00:39 █▎        15.8% 00:07 ETA 00:38 █▌        18.1% 00:08 ETA 00:36 █▊        20.5% 00:09 ETA 00:35 ██        22.6% 00:10 ETA 00:34 ██▎       25.0% 00:11 ETA 00:33 ██▌       27.4% 00:12 ETA 00:32 ██▋       29.7% 00:13 ETA 00:31 ██▉       31.8% 00:14 ETA 00:30 ███▏      34.2% 00:15 ETA 00:29 ███▍      36.5% 00:16 ETA 00:28 ███▋      38.9% 00:17 ETA 00:26 ███▉      41.2% 00:18 ETA 00:25 ████      43.5% 00:19 ETA 00:24 ████▎     45.6% 00:20 ETA 00:24 ████▌     48.0% 00:21 ETA 00:22 ████▊     50.3% 00:22 ETA 00:21 █████     52.7% 00:23 ETA 00:20 █████▎    55.0% 00:24 ETA 00:19 █████▌    57.4% 00:25 ETA 00:18 █████▋    59.7% 00:26 ETA 00:17 █████▉    62.0% 00:27 ETA 00:16 ██████▏   64.2% 00:28 ETA 00:15 ██████▍   66.6% 00:29 ETA 00:14 ██████▋   68.9% 00:30 ETA 00:13 ██████▉   71.3% 00:31 ETA 00:12 ███████▏  73.6% 00:32 ETA 00:11 ███████▎  76.0% 00:33 ETA 00:10 ███████▌  78.3% 00:34 ETA 00:09 ███████▊  80.6% 00:35 ETA 00:08 ████████  83.0% 00:36 ETA 00:07 ████████▎ 85.3% 00:37 ETA 00:06 ████████▌ 87.6% 00:38 ETA 00:05 ████████▊ 89.9% 00:39 ETA 00:04 ████████▉ 92.3% 00:40 ETA 00:03 █████████▏94.6% 00:41 ETA 00:02 █████████▍97.0% 00:42 ETA 00:01 █████████▋99.3% 00:43 ETA 00:00 █████████▉100.0% 00:43 ETA 00:00 ██████████
43 Read f1chr2R.indexlr.n100-1000.physlr.tsv
 0.0% 00:00 ETA ?            2.2% 00:01 ETA 00:44 ▏          4.3% 00:02 ETA 00:43 ▍          6.2% 00:03 ETA 00:43 ▌          8.1% 00:04 ETA 00:43 ▊         10.0% 00:05 ETA 00:42 ▉         12.0% 00:06 ETA 00:41 █▏        13.8% 00:07 ETA 00:41 █▍        15.8% 00:08 ETA 00:40 █▌        17.7% 00:09 ETA 00:40 █▊        19.5% 00:10 ETA 00:40 █▉        21.4% 00:11 ETA 00:39 ██▏       23.2% 00:12 ETA 00:38 ██▎       24.8% 00:13 ETA 00:38 ██▍       26.7% 00:14 ETA 00:38 ██▋       28.6% 00:15 ETA 00:37 ██▊       30.5% 00:16 ETA 00:36 ███       32.4% 00:17 ETA 00:35 ███▏      33.9% 00:18 ETA 00:35 ███▍      35.8% 00:19 ETA 00:34 ███▌      37.7% 00:20 ETA 00:33 ███▊      39.7% 00:21 ETA 00:32 ███▉      41.7% 00:22 ETA 00:31 ████▏     43.7% 00:23 ETA 00:29 ████▎     45.4% 00:24 ETA 00:29 ████▌     47.4% 00:25 ETA 00:28 ████▋     49.4% 00:26 ETA 00:26 ████▉     51.4% 00:27 ETA 00:25 █████▏    53.4% 00:28 ETA 00:24 █████▎    55.3% 00:29 ETA 00:23 █████▌    57.1% 00:30 ETA 00:23 █████▋    59.0% 00:31 ETA 00:21 █████▉    61.0% 00:32 ETA 00:20 ██████    62.9% 00:33 ETA 00:19 ██████▎   64.9% 00:34 ETA 00:18 ██████▍   66.7% 00:35 ETA 00:17 ██████▋   68.5% 00:36 ETA 00:17 ██████▊   70.3% 00:38 ETA 00:17 ███████   72.0% 00:39 ETA 00:16 ███████▏  73.7% 00:41 ETA 00:16 ███████▎  75.3% 00:42 ETA 00:16 ███████▌  76.9% 00:43 ETA 00:15 ███████▋  78.5% 00:45 ETA 00:14 ███████▊  80.0% 00:46 ETA 00:13 ████████  82.0% 00:47 ETA 00:11 ████████▏ 83.9% 00:48 ETA 00:10 ████████▍ 85.7% 00:49 ETA 00:09 ████████▌ 87.4% 00:50 ETA 00:07 ████████▋ 89.3% 00:51 ETA 00:06 ████████▉ 91.2% 00:52 ETA 00:05 █████████ 93.1% 00:53 ETA 00:04 █████████▎94.9% 00:54 ETA 00:03 █████████▍96.6% 00:55 ETA 00:02 █████████▋98.5% 00:56 ETA 00:00 █████████▊100.0% 00:57 ETA 00:00 ██████████
100 Counted 5129974 minimizers
 0.0% 00:00 ETA ?           58.0% 00:01 ETA 00:00 █████▊    92.6% 00:02 ETA 00:00 █████████▎100.0% 00:02 ETA 00:00 ██████████
 0.0% 00:00 ETA ?            0.9% 00:01 ETA 02:11            4.1% 00:02 ETA 01:57 ▍          8.2% 00:03 ETA 01:43 ▊         12.3% 00:04 ETA 01:31 █▏        16.4% 00:05 ETA 01:20 █▋        20.3% 00:06 ETA 01:11 ██        24.3% 00:07 ETA 01:02 ██▍       28.2% 00:08 ETA 00:55 ██▊       32.1% 00:09 ETA 00:48 ███▏      36.1% 00:10 ETA 00:42 ███▌      40.1% 00:11 ETA 00:37 ████      44.2% 00:12 ETA 00:33 ████▍     48.0% 00:13 ETA 00:29 ████▊     52.1% 00:14 ETA 00:25 █████▏    56.0% 00:15 ETA 00:21 █████▌    59.9% 00:16 ETA 00:19 █████▉    63.9% 00:17 ETA 00:16 ██████▍   67.9% 00:18 ETA 00:13 ██████▊   71.9% 00:19 ETA 00:11 ███████▏  75.8% 00:20 ETA 00:09 ███████▌  79.8% 00:21 ETA 00:07 ███████▉  83.7% 00:22 ETA 00:06 ████████▎ 87.7% 00:23 ETA 00:04 ████████▊ 91.7% 00:24 ETA 00:02 █████████▏95.6% 00:25 ETA 00:01 █████████▌99.5% 00:26 ETA 00:00 █████████▉100.0% 00:26 ETA 00:00 ██████████
129 Removed 2320899 minimizers that occur only once of 5129974 (45.24%)
131 Minimizer frequency: Q1=2 Q2=18 Q3=40 Q1-1.5*(Q3-Q1)=-55 Q3+1.5*(Q3-Q1)=97 C=97
 0.0% 00:00 ETA ?            2.1% 00:01 ETA 00:46 ▏          4.4% 00:02 ETA 00:45 ▍          6.7% 00:03 ETA 00:43 ▋          8.9% 00:04 ETA 00:42 ▉         11.2% 00:05 ETA 00:41 █         13.5% 00:06 ETA 00:39 █▎        15.8% 00:07 ETA 00:38 █▌        18.1% 00:08 ETA 00:37 █▊        20.3% 00:09 ETA 00:36 ██        22.4% 00:10 ETA 00:35 ██▏       23.8% 00:11 ETA 00:38 ██▍       26.1% 00:12 ETA 00:36 ██▌       28.4% 00:13 ETA 00:35 ██▊       30.7% 00:14 ETA 00:33 ███       33.1% 00:15 ETA 00:32 ███▎      35.4% 00:16 ETA 00:30 ███▌      37.8% 00:17 ETA 00:29 ███▊      40.1% 00:18 ETA 00:27 ████      42.5% 00:19 ETA 00:26 ████▏     44.9% 00:20 ETA 00:25 ████▍     47.1% 00:21 ETA 00:24 ████▋     49.5% 00:22 ETA 00:22 ████▉     51.9% 00:23 ETA 00:21 █████▏    54.2% 00:24 ETA 00:20 █████▍    56.5% 00:25 ETA 00:19 █████▋    58.8% 00:26 ETA 00:18 █████▉    61.1% 00:27 ETA 00:17 ██████    63.5% 00:28 ETA 00:16 ██████▎   65.8% 00:29 ETA 00:15 ██████▌   68.2% 00:30 ETA 00:13 ██████▊   70.5% 00:31 ETA 00:12 ███████   72.8% 00:32 ETA 00:11 ███████▎  75.1% 00:33 ETA 00:10 ███████▌  77.4% 00:34 ETA 00:09 ███████▋  79.7% 00:37 ETA 00:10 ███████▉  81.9% 00:38 ETA 00:09 ████████▏ 84.2% 00:39 ETA 00:08 ████████▍ 86.5% 00:40 ETA 00:06 ████████▋ 88.9% 00:41 ETA 00:05 ████████▉ 91.2% 00:42 ETA 00:04 █████████ 93.5% 00:43 ETA 00:03 █████████▎95.8% 00:44 ETA 00:02 █████████▌98.1% 00:45 ETA 00:00 █████████▊100.0% 00:46 ETA 00:00 ██████████
177 Removed 43403 most frequent minimizers of 2809075 (1.55%)
177 Removed 13 empty barcodes of 161663 (0.01%)
177 Wrote 161650 barcodes
command gtime -v -o f1chr2R.indexlr.n100-1000.c2-x.physlr.overlap.tsv.time env PYTHONPATH=.. pypy3 ../bin/physlr overlap -n10 f1chr2R.indexlr.n100-1000.c2-x.physlr.tsv >f1chr2R.indexlr.n100-1000.c2-x.physlr.overlap.tsv
0 Reading f1chr2R.indexlr.n100-1000.c2-x.physlr.tsv
 0.0% 00:00 ETA ?            2.7% 00:01 ETA 00:36 ▎          5.4% 00:02 ETA 00:35 ▌          8.0% 00:03 ETA 00:34 ▊         10.8% 00:04 ETA 00:33 █         13.5% 00:05 ETA 00:32 █▎        16.4% 00:06 ETA 00:30 █▋        19.1% 00:07 ETA 00:29 █▉        22.0% 00:08 ETA 00:28 ██▏       24.9% 00:09 ETA 00:27 ██▍       27.4% 00:10 ETA 00:26 ██▋       30.4% 00:11 ETA 00:25 ███       33.2% 00:12 ETA 00:24 ███▎      36.1% 00:13 ETA 00:23 ███▌      38.6% 00:14 ETA 00:22 ███▊      41.6% 00:15 ETA 00:21 ████▏     44.4% 00:16 ETA 00:20 ████▍     47.3% 00:17 ETA 00:18 ████▋     50.1% 00:18 ETA 00:17 █████     53.0% 00:19 ETA 00:16 █████▎    55.5% 00:20 ETA 00:16 █████▌    58.4% 00:21 ETA 00:15 █████▊    61.2% 00:22 ETA 00:13 ██████    63.9% 00:23 ETA 00:13 ██████▍   66.6% 00:24 ETA 00:12 ██████▋   69.5% 00:25 ETA 00:11 ██████▉   72.1% 00:26 ETA 00:10 ███████▏  75.0% 00:27 ETA 00:09 ███████▍  77.8% 00:28 ETA 00:07 ███████▊  80.5% 00:29 ETA 00:07 ████████  83.3% 00:30 ETA 00:06 ████████▎ 86.2% 00:31 ETA 00:05 ████████▌ 89.0% 00:32 ETA 00:03 ████████▉ 91.8% 00:33 ETA 00:02 █████████▏94.7% 00:34 ETA 00:01 █████████▍97.5% 00:35 ETA 00:00 █████████▊100.0% 00:36 ETA 00:00 ██████████
36 Read f1chr2R.indexlr.n100-1000.c2-x.physlr.tsv
 0.0% 00:00 ETA ?            1.5% 00:01 ETA 01:05 ▏          2.9% 00:02 ETA 01:05 ▎          3.9% 00:03 ETA 01:07 ▍          5.2% 00:04 ETA 01:07 ▌          6.5% 00:05 ETA 01:07 ▋          8.0% 00:06 ETA 01:05 ▊          9.2% 00:07 ETA 01:05 ▉         10.6% 00:08 ETA 01:04 █         11.8% 00:09 ETA 01:04 █▏        13.2% 00:10 ETA 01:03 █▎        14.4% 00:11 ETA 01:03 █▍        15.6% 00:12 ETA 01:03 █▌        16.8% 00:13 ETA 01:03 █▋        18.1% 00:14 ETA 01:03 █▊        19.2% 00:15 ETA 01:03 █▉        20.4% 00:16 ETA 01:03 ██        21.5% 00:17 ETA 01:03 ██▏       22.7% 00:18 ETA 01:03 ██▎       23.9% 00:19 ETA 01:02 ██▍       24.9% 00:20 ETA 01:02 ██▍       26.1% 00:21 ETA 01:02 ██▌       27.1% 00:22 ETA 01:03 ██▋       28.3% 00:23 ETA 01:02 ██▊       29.4% 00:24 ETA 01:02 ██▉       30.4% 00:25 ETA 01:02 ███       31.5% 00:26 ETA 01:01 ███▏      32.5% 00:27 ETA 01:01 ███▎      33.6% 00:28 ETA 01:01 ███▎      34.7% 00:29 ETA 01:00 ███▍      35.7% 00:30 ETA 01:00 ███▌      36.7% 00:31 ETA 00:59 ███▋      37.8% 00:32 ETA 00:58 ███▊      38.8% 00:34 ETA 00:58 ███▉      39.8% 00:35 ETA 00:58 ███▉      40.8% 00:36 ETA 00:57 ████      41.8% 00:37 ETA 00:57 ████▏     42.8% 00:38 ETA 00:57 ████▎     43.8% 00:40 ETA 01:00 ████▍     44.7% 00:41 ETA 01:03 ████▍     45.7% 00:42 ETA 01:02 ████▌     46.6% 00:43 ETA 01:00 ████▋     47.6% 00:44 ETA 00:58 ████▊     48.5% 00:46 ETA 00:58 ████▊     49.6% 00:47 ETA 00:56 ████▉     50.6% 00:48 ETA 00:54 █████     51.6% 00:49 ETA 00:52 █████▏    52.5% 00:50 ETA 00:52 █████▎    53.5% 00:51 ETA 00:50 █████▎    54.5% 00:52 ETA 00:49 █████▍    55.5% 00:53 ETA 00:48 █████▌    56.4% 00:54 ETA 00:47 █████▋    57.4% 00:55 ETA 00:46 █████▋    58.3% 00:56 ETA 00:46 █████▊    59.3% 00:57 ETA 00:44 █████▉    60.3% 00:58 ETA 00:43 ██████    61.2% 00:59 ETA 00:42 ██████    62.2% 01:00 ETA 00:41 ██████▏   63.1% 01:01 ETA 00:40 ██████▎   64.1% 01:02 ETA 00:39 ██████▍   65.0% 01:03 ETA 00:38 ██████▌   66.0% 01:04 ETA 00:37 ██████▌   66.9% 01:05 ETA 00:36 ██████▋   67.9% 01:07 ETA 00:35 ██████▊   68.8% 01:08 ETA 00:34 ██████▉   69.7% 01:09 ETA 00:34 ██████▉   70.7% 01:10 ETA 00:32 ███████   71.6% 01:11 ETA 00:31 ███████▏  72.5% 01:12 ETA 00:30 ███████▎  73.4% 01:13 ETA 00:29 ███████▎  74.3% 01:14 ETA 00:29 ███████▍  75.2% 01:15 ETA 00:28 ███████▌  76.2% 01:16 ETA 00:27 ███████▌  77.1% 01:17 ETA 00:26 ███████▋  78.0% 01:18 ETA 00:25 ███████▊  78.8% 01:19 ETA 00:24 ███████▉  79.7% 01:20 ETA 00:23 ███████▉  80.6% 01:21 ETA 00:22 ████████  81.5% 01:22 ETA 00:21 ████████▏ 82.4% 01:23 ETA 00:20 ████████▏ 83.2% 01:25 ETA 00:19 ████████▎ 84.1% 01:26 ETA 00:18 ████████▍ 85.0% 01:27 ETA 00:17 ████████▍ 85.8% 01:28 ETA 00:17 ████████▌ 86.7% 01:29 ETA 00:15 ████████▋ 87.5% 01:30 ETA 00:15 ████████▊ 88.4% 01:31 ETA 00:14 ████████▊ 89.2% 01:32 ETA 00:13 ████████▉ 90.0% 01:33 ETA 00:12 █████████ 90.9% 01:34 ETA 00:11 █████████ 91.7% 01:35 ETA 00:10 █████████▏92.6% 01:36 ETA 00:09 █████████▎93.4% 01:38 ETA 00:08 █████████▎94.2% 01:39 ETA 00:07 █████████▍95.0% 01:40 ETA 00:06 █████████▌95.8% 01:41 ETA 00:05 █████████▌96.6% 01:42 ETA 00:04 █████████▋97.4% 01:43 ETA 00:03 █████████▋98.2% 01:44 ETA 00:02 █████████▊99.0% 01:45 ETA 00:01 █████████▉99.8% 01:46 ETA 00:00 █████████▉100.0% 01:46 ETA 00:00 ██████████
142 Indexed 2765672 minimizers
 0.0% 00:00 ETA ?           100.0% 00:00 ETA 00:00 ██████████
143 Added 158760 barcodes to the graph
 0.0% 00:00 ETA ?            0.0% 00:01 ETA 4:04:09            0.0% 00:02 ETA 3:52:03            0.1% 00:03 ETA 3:32:56            0.1% 00:04 ETA 3:14:25            0.2% 00:05 ETA 2:57:08            0.2% 00:06 ETA 2:42:27            0.3% 00:07 ETA 2:30:27            0.3% 00:08 ETA 2:19:18            0.4% 00:09 ETA 2:09:01            0.4% 00:10 ETA 2:01:41            0.4% 00:11 ETA 1:57:22            0.5% 00:12 ETA 1:49:14            0.5% 00:13 ETA 1:42:24            0.6% 00:14 ETA 1:35:45            0.6% 00:15 ETA 1:28:58            0.7% 00:16 ETA 1:22:53            0.7% 00:17 ETA 1:17:11            0.8% 00:18 ETA 1:11:49            0.9% 00:19 ETA 1:07:31            0.9% 00:20 ETA 1:03:25            1.0% 00:21 ETA 1:00:05            1.0% 00:22 ETA 58:30              1.1% 00:23 ETA 55:16            1.1% 00:24 ETA 54:13            1.2% 00:26 ETA 52:27            1.2% 00:27 ETA 50:36            1.3% 00:28 ETA 49:57 ▏          1.3% 00:29 ETA 47:59 ▏          1.4% 00:30 ETA 45:52 ▏          1.5% 00:31 ETA 43:51 ▏          1.5% 00:32 ETA 43:53 ▏          1.6% 00:33 ETA 42:40 ▏          1.6% 00:34 ETA 41:14 ▏          1.7% 00:35 ETA 40:23 ▏          1.7% 00:36 ETA 38:38 ▏          1.8% 00:37 ETA 37:13 ▏          1.9% 00:38 ETA 36:26 ▏          1.9% 00:39 ETA 35:46 ▏          2.0% 00:40 ETA 35:08 ▏          2.0% 00:41 ETA 34:31 ▏          2.1% 00:42 ETA 34:08 ▏          2.1% 00:43 ETA 33:06 ▏          2.2% 00:44 ETA 32:38 ▏          2.3% 00:49 ETA 41:58 ▏          2.3% 00:50 ETA 42:52 ▏          2.4% 00:52 ETA 43:37 ▏          2.4% 00:53 ETA 42:54 ▏          2.5% 00:54 ETA 42:11 ▏          2.5% 00:55 ETA 41:56 ▎          2.6% 00:56 ETA 41:02 ▎          2.6% 00:57 ETA 40:04 ▎          2.7% 00:58 ETA 39:44 ▎          2.7% 00:59 ETA 38:06 ▎          2.8% 01:00 ETA 37:14 ▎          2.8% 01:01 ETA 37:59 ▎          2.9% 01:02 ETA 36:54 ▎          2.9% 01:03 ETA 36:07 ▎          3.0% 01:04 ETA 35:22 ▎          3.0% 01:05 ETA 35:25 ▎          3.1% 01:06 ETA 34:41 ▎          3.2% 01:08 ETA 35:30 ▎          3.2% 01:09 ETA 34:24 ▎          3.3% 01:10 ETA 33:48 ▎          3.3% 01:11 ETA 33:02 ▎          3.4% 01:12 ETA 31:55 ▎          3.5% 01:13 ETA 31:43 ▎          3.5% 01:14 ETA 30:55 ▎          3.6% 01:15 ETA 31:05 ▎          3.7% 01:16 ETA 30:09 ▎          3.7% 01:17 ETA 29:24 ▎          3.8% 01:19 ETA 30:36 ▍          3.9% 01:20 ETA 29:54 ▍          3.9% 01:21 ETA 29:06 ▍          4.0% 01:22 ETA 28:28 ▍          4.1% 01:23 ETA 28:56 ▍          4.1% 01:24 ETA 28:40 ▍          4.2% 01:25 ETA 29:34 ▍          4.2% 01:27 ETA 30:32 ▍          4.3% 01:28 ETA 29:55 ▍          4.4% 01:29 ETA 29:21 ▍          4.4% 01:30 ETA 28:43 ▍          4.5% 01:31 ETA 28:06 ▍          4.6% 01:32 ETA 27:27 ▍          4.7% 01:33 ETA 26:56 ▍          4.7% 01:34 ETA 27:22 ▍          4.8% 01:35 ETA 28:03 ▍          4.8% 01:36 ETA 28:10 ▍          4.9% 01:38 ETA 29:15 ▍          5.0% 01:39 ETA 28:40 ▍          5.0% 01:40 ETA 28:14 ▌          5.1% 01:41 ETA 28:17 ▌          5.1% 01:42 ETA 28:06 ▌          5.2% 01:43 ETA 27:56 ▌          5.3% 01:44 ETA 28:06 ▌          5.3% 01:45 ETA 28:58 ▌          5.4% 01:46 ETA 28:50 ▌          5.5% 01:47 ETA 27:58 ▌          5.5% 01:48 ETA 27:57 ▌          5.6% 01:50 ETA 28:32 ▌          5.6% 01:51 ETA 29:32 ▌          5.7% 01:52 ETA 30:30 ▌          5.7% 01:53 ETA 29:57 ▌          5.8% 01:54 ETA 29:48 ▌          5.9% 01:56 ETA 30:25 ▌          5.9% 01:57 ETA 30:42 ▌          6.0% 01:58 ETA 31:01 ▌          6.0% 01:59 ETA 30:28 ▌          6.1% 02:00 ETA 29:46 ▌          6.2% 02:01 ETA 29:20 ▌          6.2% 02:02 ETA 29:25 ▌          6.3% 02:03 ETA 28:49 ▋          6.3% 02:04 ETA 28:32 ▋          6.4% 02:05 ETA 28:38 ▋          6.4% 02:06 ETA 28:57 ▋          6.5% 02:07 ETA 28:42 ▋          6.6% 02:14 ETA 43:40 ▋          6.6% 02:15 ETA 42:17 ▋          6.7% 02:16 ETA 40:38 ▋          6.7% 02:17 ETA 39:57 ▋          6.8% 02:18 ETA 38:59 ▋          6.8% 02:19 ETA 38:29 ▋          6.9% 02:20 ETA 38:04 ▋          6.9% 02:21 ETA 36:57 ▋          7.0% 02:22 ETA 35:51 ▋          7.1% 02:23 ETA 34:58 ▋          7.1% 02:24 ETA 34:05 ▋          7.2% 02:25 ETA 32:58 ▋          7.2% 02:26 ETA 32:14 ▋          7.3% 02:28 ETA 35:34 ▋          7.4% 02:29 ETA 34:36 ▋          7.4% 02:31 ETA 34:32 ▋          7.5% 02:32 ETA 33:08 ▋          7.5% 02:33 ETA 32:39 ▊          7.6% 02:34 ETA 32:34 ▊          7.6% 02:35 ETA 33:21 ▊          7.7% 02:36 ETA 32:09 ▊          7.8% 02:37 ETA 30:58 ▊          7.9% 02:38 ETA 30:03 ▊          7.9% 02:39 ETA 29:27 ▊          8.0% 02:40 ETA 28:33 ▊          8.1% 02:41 ETA 28:01 ▊          8.1% 02:42 ETA 27:38 ▊          8.2% 02:43 ETA 27:51 ▊          8.3% 02:44 ETA 27:00 ▊          8.3% 02:45 ETA 26:20 ▊          8.4% 02:46 ETA 25:43 ▊          8.5% 02:47 ETA 25:42 ▊          8.5% 02:48 ETA 25:08 ▊          8.6% 02:49 ETA 24:55 ▊          8.7% 02:50 ETA 24:59 ▊          8.7% 02:52 ETA 25:11 ▊          8.8% 02:53 ETA 25:45 ▉          8.9% 02:54 ETA 26:10 ▉          8.9% 02:55 ETA 26:01 ▉          9.0% 02:56 ETA 25:27 ▉          9.1% 02:57 ETA 25:13 ▉          9.1% 02:58 ETA 24:37 ▉          9.2% 02:59 ETA 24:25 ▉          9.3% 03:01 ETA 26:42 ▉          9.4% 03:02 ETA 26:01 ▉          9.4% 03:03 ETA 25:36 ▉          9.5% 03:04 ETA 25:17 ▉          9.5% 03:05 ETA 25:16 ▉          9.6% 03:06 ETA 25:30 ▉          9.7% 03:07 ETA 25:03 ▉          9.7% 03:09 ETA 25:53 ▉          9.8% 03:10 ETA 25:38 ▉          9.9% 03:11 ETA 25:52 ▉          9.9% 03:12 ETA 25:46 ▉         10.0% 03:13 ETA 26:14 ▉         10.1% 03:14 ETA 26:21 █         10.1% 03:15 ETA 26:27 █         10.2% 03:16 ETA 26:15 █         10.2% 03:18 ETA 26:35 █         10.3% 03:19 ETA 27:20 █         10.4% 03:20 ETA 26:52 █         10.4% 03:21 ETA 26:35 █         10.5% 03:22 ETA 26:21 █         10.5% 03:23 ETA 26:04 █         10.6% 03:24 ETA 25:25 █         10.7% 03:25 ETA 26:16 █         10.7% 03:27 ETA 26:55 █         10.8% 03:28 ETA 26:49 █         10.9% 03:29 ETA 26:12 █         10.9% 03:30 ETA 25:54 █         11.0% 03:31 ETA 25:39 █         11.1% 03:32 ETA 25:56 █         11.1% 03:33 ETA 25:43 █         11.2% 03:34 ETA 25:38 █         11.2% 03:35 ETA 25:27 █         11.3% 03:37 ETA 27:35 █▏        11.3% 03:38 ETA 27:29 █▏        11.4% 03:39 ETA 26:57 █▏        11.5% 03:40 ETA 27:03 █▏        11.5% 03:41 ETA 27:20 █▏        11.6% 03:42 ETA 26:53 █▏        11.7% 03:43 ETA 26:46 █▏        11.7% 03:44 ETA 26:30 █▏        11.8% 03:45 ETA 26:07 █▏        11.8% 03:46 ETA 26:20 █▏        11.9% 03:47 ETA 25:38 █▏        12.0% 03:48 ETA 24:58 █▏        12.0% 03:49 ETA 24:54 █▏        12.1% 03:50 ETA 25:03 █▏        12.2% 03:51 ETA 25:45 █▏        12.2% 03:52 ETA 25:40 █▏        12.3% 03:53 ETA 25:25 █▏        12.4% 03:54 ETA 25:00 █▏        12.4% 03:56 ETA 25:27 █▏        12.5% 03:57 ETA 24:42 █▏        12.6% 03:58 ETA 24:35 █▎        12.6% 03:59 ETA 25:26 █▎        12.7% 04:00 ETA 24:44 █▎        12.8% 04:01 ETA 24:25 █▎        12.8% 04:02 ETA 24:20 █▎        12.9% 04:03 ETA 24:25 █▎        12.9% 04:04 ETA 24:34 █▎        13.0% 04:05 ETA 24:23 █▎        13.1% 04:07 ETA 26:42 █▎        13.1% 04:09 ETA 28:47 █▎        13.2% 04:11 ETA 30:10 █▎        13.2% 04:13 ETA 32:09 █▎        13.3% 04:14 ETA 32:27 █▎        13.3% 04:15 ETA 32:06 █▎        13.4% 04:16 ETA 32:02 █▎        13.4% 04:17 ETA 31:34 █▎        13.5% 04:18 ETA 30:37 █▎        13.6% 04:19 ETA 30:02 █▎        13.6% 04:20 ETA 29:14 █▎        13.7% 04:21 ETA 28:48 █▎        13.8% 04:22 ETA 28:11 █▍        13.8% 04:23 ETA 27:23 █▍        13.9% 04:24 ETA 27:00 █▍        13.9% 04:25 ETA 27:08 █▍        14.0% 04:34 ETA 46:23 █▍        14.1% 04:35 ETA 43:46 █▍        14.1% 04:36 ETA 41:58 █▍        14.2% 04:37 ETA 40:14 █▍        14.2% 04:38 ETA 39:02 █▍        14.3% 04:39 ETA 37:30 █▍        14.4% 04:40 ETA 36:07 █▍        14.4% 04:41 ETA 34:11 █▍        14.5% 04:42 ETA 32:43 █▍        14.6% 04:43 ETA 32:10 █▍        14.6% 04:44 ETA 31:31 █▍        14.7% 04:45 ETA 30:25 █▍        14.8% 04:46 ETA 29:41 █▍        14.8% 04:47 ETA 28:48 █▍        14.9% 04:48 ETA 28:55 █▍        14.9% 04:49 ETA 28:05 █▍        15.0% 04:50 ETA 27:34 █▌        15.1% 04:51 ETA 26:51 █▌        15.1% 04:52 ETA 26:25 █▌        15.2% 04:53 ETA 26:13 █▌        15.3% 04:54 ETA 26:14 █▌        15.3% 04:55 ETA 25:45 █▌        15.4% 04:57 ETA 26:15 █▌        15.4% 04:58 ETA 26:06 █▌        15.5% 04:59 ETA 25:41 █▌        15.6% 05:00 ETA 25:30 █▌        15.6% 05:01 ETA 25:03 █▌        15.7% 05:02 ETA 25:00 █▌        15.8% 05:03 ETA 24:26 █▌        15.8% 05:04 ETA 23:43 █▌        15.9% 05:05 ETA 24:10 █▌        16.0% 05:06 ETA 23:31 █▌        16.1% 05:07 ETA 23:16 █▌        16.1% 05:08 ETA 22:42 █▌        16.2% 05:09 ETA 22:35 █▌        16.3% 05:10 ETA 22:04 █▋        16.3% 05:11 ETA 21:57 █▋        16.4% 05:12 ETA 21:44 █▋        16.5% 05:13 ETA 21:23 █▋        16.6% 05:14 ETA 21:23 █▋        16.6% 05:15 ETA 21:20 █▋        16.7% 05:16 ETA 21:32 █▋        16.8% 05:18 ETA 21:47 █▋        16.8% 05:19 ETA 21:58 █▋        16.9% 05:20 ETA 22:02 █▋        17.0% 05:21 ETA 22:08 █▋        17.0% 05:22 ETA 21:57 █▋        17.1% 05:23 ETA 22:19 █▋        17.1% 05:24 ETA 22:25 █▋        17.2% 05:25 ETA 22:31 █▋        17.3% 05:26 ETA 23:08 █▋        17.3% 05:27 ETA 22:50 █▋        17.4% 05:28 ETA 22:15 █▋        17.5% 05:29 ETA 22:19 █▋        17.5% 05:31 ETA 22:28 █▊        17.6% 05:32 ETA 22:53 █▊        17.7% 05:33 ETA 22:33 █▊        17.8% 05:34 ETA 22:00 █▊        17.8% 05:35 ETA 21:36 █▊        17.9% 05:36 ETA 21:08 █▊        18.0% 05:37 ETA 20:51 █▊        18.1% 05:38 ETA 21:41 █▊        18.1% 05:39 ETA 21:30 █▊        18.2% 05:40 ETA 21:37 █▊        18.3% 05:41 ETA 21:45 █▊        18.3% 05:42 ETA 21:25 █▊        18.4% 05:44 ETA 21:32 █▊        18.5% 05:46 ETA 23:52 █▊        18.5% 05:47 ETA 23:21 █▊        18.6% 05:48 ETA 23:27 █▊        18.7% 05:49 ETA 22:50 █▊        18.7% 05:50 ETA 22:31 █▊        18.8% 05:51 ETA 22:50 █▉        18.9% 05:52 ETA 22:59 █▉        18.9% 05:53 ETA 22:22 █▉        19.0% 05:54 ETA 22:07 █▉        19.1% 05:55 ETA 22:29 █▉        19.1% 05:56 ETA 21:58 █▉        19.2% 05:58 ETA 22:21 █▉        19.3% 05:59 ETA 22:31 █▉        19.4% 06:00 ETA 21:50 █▉        19.4% 06:01 ETA 21:59 █▉        19.5% 06:02 ETA 21:59 █▉        19.6% 06:03 ETA 21:39 █▉        19.6% 06:04 ETA 21:41 █▉        19.7% 06:05 ETA 21:35 █▉        19.8% 06:06 ETA 21:23 █▉        19.8% 06:07 ETA 21:09 █▉        19.9% 06:08 ETA 21:00 █▉        20.0% 06:09 ETA 21:04 █▉        20.0% 06:10 ETA 20:34 ██        20.1% 06:11 ETA 20:30 ██        20.2% 06:12 ETA 20:29 ██        20.2% 06:13 ETA 20:41 ██        20.3% 06:14 ETA 20:43 ██        20.4% 06:15 ETA 20:35 ██        20.4% 06:16 ETA 20:23 ██        20.5% 06:17 ETA 19:53 ██        20.6% 06:18 ETA 19:38 ██        20.7% 06:19 ETA 19:52 ██        20.7% 06:21 ETA 20:15 ██        20.8% 06:22 ETA 20:06 ██        20.9% 06:23 ETA 20:30 ██        21.0% 06:24 ETA 20:09 ██        21.0% 06:25 ETA 20:03 ██        21.1% 06:26 ETA 20:18 ██        21.2% 06:27 ETA 20:19 ██        21.2% 06:28 ETA 20:04 ██        21.3% 06:29 ETA 20:16 ██▏       21.4% 06:30 ETA 20:14 ██▏       21.4% 06:31 ETA 20:07 ██▏       21.5% 06:32 ETA 20:27 ██▏       21.6% 06:34 ETA 20:53 ██▏       21.6% 06:35 ETA 21:01 ██▏       21.7% 06:36 ETA 21:07 ██▏       21.8% 06:37 ETA 20:56 ██▏       21.8% 06:38 ETA 20:47 ██▏       21.9% 06:39 ETA 20:51 ██▏       22.0% 06:40 ETA 20:35 ██▏       22.0% 06:41 ETA 20:29 ██▏       22.1% 06:42 ETA 20:41 ██▏       22.1% 06:43 ETA 21:10 ██▏       22.2% 06:44 ETA 20:59 ██▏       22.3% 06:45 ETA 20:53 ██▏       22.3% 06:46 ETA 20:42 ██▏       22.4% 06:47 ETA 20:24 ██▏       22.5% 06:48 ETA 20:14 ██▏       22.6% 06:49 ETA 19:58 ██▎       22.6% 06:50 ETA 19:56 ██▎       22.7% 06:51 ETA 19:36 ██▎       22.8% 06:52 ETA 19:33 ██▎       22.9% 06:53 ETA 19:08 ██▎       22.9% 06:55 ETA 19:48 ██▎       23.0% 06:56 ETA 19:37 ██▎       23.1% 06:57 ETA 19:22 ██▎       23.1% 06:58 ETA 19:09 ██▎       23.2% 06:59 ETA 19:07 ██▎       23.3% 07:00 ETA 19:39 ██▎       23.3% 07:01 ETA 19:34 ██▎       23.4% 07:02 ETA 19:18 ██▎       23.5% 07:03 ETA 19:13 ██▎       23.6% 07:04 ETA 19:39 ██▎       23.6% 07:05 ETA 19:40 ██▎       23.7% 07:06 ETA 19:13 ██▎       23.8% 07:07 ETA 18:58 ██▍       23.8% 07:08 ETA 18:55 ██▍       23.9% 07:09 ETA 19:12 ██▍       24.0% 07:11 ETA 19:31 ██▍       24.0% 07:12 ETA 19:31 ██▍       24.1% 07:13 ETA 19:01 ██▍       24.2% 07:14 ETA 19:07 ██▍       24.3% 07:15 ETA 19:13 ██▍       24.3% 07:16 ETA 19:37 ██▍       24.4% 07:17 ETA 19:26 ██▍       24.5% 07:18 ETA 19:17 ██▍       24.5% 07:19 ETA 19:25 ██▍       24.6% 07:20 ETA 19:16 ██▍       24.7% 07:21 ETA 19:24 ██▍       24.7% 07:22 ETA 19:14 ██▍       24.8% 07:23 ETA 19:04 ██▍       24.9% 07:24 ETA 19:00 ██▍       25.0% 07:25 ETA 18:36 ██▍       25.0% 07:27 ETA 19:02 ██▌       25.1% 07:28 ETA 18:38 ██▌       25.2% 07:30 ETA 20:23 ██▌       25.3% 07:31 ETA 20:19 ██▌       25.3% 07:32 ETA 20:05 ██▌       25.4% 07:33 ETA 20:15 ██▌       25.4% 07:34 ETA 20:17 ██▌       25.5% 07:35 ETA 20:31 ██▌       25.6% 07:36 ETA 20:37 ██▌       25.6% 07:37 ETA 20:25 ██▌       25.7% 07:38 ETA 20:37 ██▌       25.8% 07:39 ETA 20:24 ██▌       25.8% 07:40 ETA 20:06 ██▌       25.9% 07:41 ETA 19:58 ██▌       26.0% 07:42 ETA 19:45 ██▌       26.0% 07:43 ETA 20:05 ██▌       26.1% 07:45 ETA 20:18 ██▌       26.2% 07:46 ETA 20:23 ██▌       26.2% 07:47 ETA 20:16 ██▌       26.3% 07:48 ETA 19:48 ██▋       26.4% 07:49 ETA 19:26 ██▋       26.4% 07:50 ETA 19:23 ██▋       26.5% 07:51 ETA 19:01 ██▋       26.6% 07:52 ETA 18:39 ██▋       26.7% 07:53 ETA 18:39 ██▋       26.7% 07:54 ETA 18:22 ██▋       26.8% 07:55 ETA 18:19 ██▋       26.9% 07:56 ETA 18:09 ██▋       27.0% 07:57 ETA 18:30 ██▋       27.0% 07:58 ETA 18:35 ██▋       27.1% 07:59 ETA 18:28 ██▋       27.2% 08:00 ETA 18:19 ██▋       27.2% 08:01 ETA 18:52 ██▋       27.3% 08:02 ETA 18:56 ██▋       27.4% 08:04 ETA 19:20 ██▋       27.4% 08:05 ETA 19:48 ██▋       27.5% 08:06 ETA 20:21 ██▋       27.6% 08:07 ETA 20:02 ██▊       27.6% 08:08 ETA 19:54 ██▊       27.7% 08:09 ETA 19:44 ██▊       27.8% 08:10 ETA 19:27 ██▊       27.8% 08:11 ETA 19:32 ██▊       27.9% 08:12 ETA 19:18 ██▊       28.0% 08:13 ETA 18:59 ██▊       28.0% 08:14 ETA 18:49 ██▊       28.1% 08:15 ETA 18:26 ██▊       28.2% 08:16 ETA 18:40 ██▊       28.2% 08:18 ETA 19:10 ██▊       28.3% 08:19 ETA 19:40 ██▊       28.4% 08:21 ETA 20:54 ██▊       28.4% 08:23 ETA 22:23 ██▊       28.5% 08:24 ETA 24:01 ██▊       28.5% 08:25 ETA 23:49 ██▊       28.6% 08:26 ETA 23:49 ██▊       28.7% 08:27 ETA 23:03 ██▊       28.7% 08:28 ETA 22:07 ██▊       28.8% 08:29 ETA 21:34 ██▉       28.9% 08:31 ETA 21:25 ██▉       28.9% 08:32 ETA 21:34 ██▉       29.0% 08:33 ETA 21:29 ██▉       29.1% 08:34 ETA 21:07 ██▉       29.1% 08:35 ETA 20:27 ██▉       29.2% 08:36 ETA 20:17 ██▉       29.3% 08:37 ETA 19:49 ██▉       29.4% 08:38 ETA 19:25 ██▉       29.4% 08:39 ETA 19:33 ██▉       29.5% 08:40 ETA 19:45 ██▉       29.5% 08:41 ETA 19:42 ██▉       29.6% 08:42 ETA 19:23 ██▉       29.7% 08:43 ETA 19:38 ██▉       29.7% 08:44 ETA 19:33 ██▉       29.8% 08:45 ETA 19:17 ██▉       29.9% 08:46 ETA 19:25 ██▉       29.9% 08:47 ETA 19:11 ██▉       30.0% 08:48 ETA 19:01 ███       30.1% 08:49 ETA 18:44 ███       30.1% 08:50 ETA 18:31 ███       30.2% 08:51 ETA 18:19 ███       30.3% 08:52 ETA 18:17 ███       30.4% 08:53 ETA 17:55 ███       30.4% 08:54 ETA 17:33 ███       30.5% 08:55 ETA 17:30 ███       30.6% 08:56 ETA 17:22 ███       30.6% 08:57 ETA 17:15 ███       30.7% 08:58 ETA 17:06 ███       30.8% 08:59 ETA 16:59 ███       30.9% 09:00 ETA 16:56 ███       30.9% 09:02 ETA 17:04 ███       31.0% 09:03 ETA 16:50 ███       31.1% 09:04 ETA 16:59 ███       31.1% 09:05 ETA 16:53 ███       31.2% 09:06 ETA 16:54 ███       31.3% 09:07 ETA 16:51 ███▏      31.4% 09:08 ETA 16:43 ███▏      31.4% 09:09 ETA 16:47 ███▏      31.5% 09:12 ETA 21:01 ███▏      31.6% 09:13 ETA 20:22 ███▏      31.6% 09:14 ETA 19:52 ███▏      31.7% 09:16 ETA 20:15 ███▏      31.8% 09:18 ETA 21:38 ███▏      31.8% 09:19 ETA 22:38 ███▏      31.9% 09:21 ETA 24:10 ███▏      32.0% 09:23 ETA 25:48 ███▏      32.0% 09:25 ETA 26:26 ███▏      32.1% 09:26 ETA 27:11 ███▏      32.1% 09:27 ETA 27:10 ███▏      32.2% 09:28 ETA 26:04 ███▏      32.2% 09:29 ETA 25:07 ███▏      32.3% 09:32 ETA 27:11 ███▏      32.3% 09:33 ETA 27:29 ███▏      32.4% 09:34 ETA 26:21 ███▏      32.5% 09:35 ETA 25:30 ███▏      32.5% 09:36 ETA 24:26 ███▎      32.6% 09:37 ETA 23:36 ███▎      32.7% 09:38 ETA 22:52 ███▎      32.8% 09:39 ETA 22:16 ███▎      32.8% 09:40 ETA 21:46 ███▎      32.9% 09:41 ETA 21:06 ███▎      32.9% 09:42 ETA 21:03 ███▎      33.0% 09:43 ETA 20:39 ███▎      33.1% 09:44 ETA 20:06 ███▎      33.2% 09:45 ETA 19:44 ███▎      33.2% 09:46 ETA 19:10 ███▎      33.3% 09:47 ETA 18:30 ███▎      33.4% 09:48 ETA 17:55 ███▎      33.5% 09:49 ETA 17:18 ███▎      33.6% 09:50 ETA 16:55 ███▎      33.7% 09:51 ETA 16:27 ███▎      33.8% 09:52 ETA 16:02 ███▍      33.8% 09:53 ETA 15:42 ███▍      33.9% 09:54 ETA 15:29 ███▍      34.0% 09:55 ETA 15:20 ███▍      34.1% 09:56 ETA 15:07 ███▍      34.2% 09:57 ETA 14:54 ███▍      34.2% 09:58 ETA 14:47 ███▍      34.3% 09:59 ETA 14:21 ███▍      34.4% 10:00 ETA 14:16 ███▍      34.5% 10:01 ETA 13:56 ███▍      34.6% 10:02 ETA 14:04 ███▍      34.7% 10:03 ETA 13:50 ███▍      34.8% 10:04 ETA 14:05 ███▍      34.9% 10:05 ETA 14:00 ███▍      34.9% 10:06 ETA 13:49 ███▍      35.0% 10:07 ETA 13:43 ███▌      35.1% 10:09 ETA 13:42 ███▌      35.2% 10:10 ETA 13:36 ███▌      35.3% 10:11 ETA 13:28 ███▌      35.4% 10:12 ETA 13:47 ███▌      35.5% 10:13 ETA 13:33 ███▌      35.5% 10:14 ETA 13:24 ███▌      35.6% 10:15 ETA 13:29 ███▌      35.7% 10:16 ETA 13:17 ███▌      35.8% 10:17 ETA 13:20 ███▌      35.9% 10:18 ETA 13:09 ███▌      36.0% 10:19 ETA 13:10 ███▌      36.1% 10:20 ETA 13:10 ███▌      36.2% 10:21 ETA 12:59 ███▌      36.2% 10:22 ETA 12:52 ███▌      36.3% 10:23 ETA 12:56 ███▋      36.4% 10:24 ETA 13:11 ███▋      36.5% 10:25 ETA 13:12 ███▋      36.6% 10:26 ETA 12:58 ███▋      36.7% 10:27 ETA 12:55 ███▋      36.8% 10:28 ETA 12:50 ███▋      36.8% 10:29 ETA 12:43 ███▋      36.9% 10:30 ETA 12:32 ███▋      37.0% 10:31 ETA 12:22 ███▋      37.1% 10:32 ETA 12:25 ███▋      37.2% 10:34 ETA 12:34 ███▋      37.3% 10:35 ETA 12:33 ███▋      37.4% 10:36 ETA 12:21 ███▋      37.5% 10:37 ETA 12:27 ███▋      37.6% 10:38 ETA 12:20 ███▊      37.6% 10:39 ETA 12:21 ███▊      37.7% 10:40 ETA 12:21 ███▊      37.8% 10:41 ETA 12:19 ███▊      37.9% 10:42 ETA 12:13 ███▊      38.0% 10:43 ETA 12:12 ███▊      38.1% 10:44 ETA 12:12 ███▊      38.2% 10:45 ETA 12:18 ███▊      38.3% 10:46 ETA 12:12 ███▊      38.3% 10:47 ETA 12:15 ███▊      38.4% 10:48 ETA 12:03 ███▊      38.5% 10:49 ETA 11:57 ███▊      38.6% 10:51 ETA 12:59 ███▊      38.7% 10:52 ETA 12:52 ███▊      38.8% 10:53 ETA 12:49 ███▉      38.9% 10:54 ETA 12:37 ███▉      39.0% 10:55 ETA 12:22 ███▉      39.1% 10:56 ETA 12:15 ███▉      39.2% 10:57 ETA 12:04 ███▉      39.3% 10:58 ETA 11:56 ███▉      39.3% 10:59 ETA 11:47 ███▉      39.4% 11:00 ETA 11:53 ███▉      39.5% 11:01 ETA 11:44 ███▉      39.6% 11:02 ETA 11:31 ███▉      39.7% 11:03 ETA 11:37 ███▉      39.8% 11:04 ETA 11:33 ███▉      39.9% 11:05 ETA 11:39 ███▉      40.0% 11:06 ETA 11:32 ███▉      40.1% 11:07 ETA 11:28 ████      40.2% 11:08 ETA 11:33 ████      40.3% 11:09 ETA 11:30 ████      40.4% 11:10 ETA 11:25 ████      40.5% 11:11 ETA 11:17 ████      40.5% 11:12 ETA 11:14 ████      40.6% 11:13 ETA 11:07 ████      40.7% 11:14 ETA 11:07 ████      40.8% 11:15 ETA 11:08 ████      40.9% 11:16 ETA 10:58 ████      41.0% 11:17 ETA 10:51 ████      41.1% 11:18 ETA 10:49 ████      41.2% 11:19 ETA 10:44 ████      41.3% 11:21 ETA 10:46 ████▏     41.4% 11:22 ETA 10:38 ████▏     41.5% 11:23 ETA 10:44 ████▏     41.6% 11:24 ETA 10:38 ████▏     41.7% 11:25 ETA 10:33 ████▏     41.8% 11:26 ETA 10:33 ████▏     41.9% 11:27 ETA 10:22 ████▏     42.0% 11:28 ETA 10:27 ████▏     42.1% 11:29 ETA 10:33 ████▏     42.2% 11:30 ETA 10:26 ████▏     42.3% 11:31 ETA 10:43 ████▏     42.4% 11:32 ETA 10:40 ████▏     42.5% 11:33 ETA 10:36 ████▏     42.6% 11:34 ETA 10:34 ████▎     42.7% 11:35 ETA 10:27 ████▎     42.8% 11:36 ETA 10:21 ████▎     42.8% 11:37 ETA 10:19 ████▎     42.9% 11:38 ETA 10:21 ████▎     43.0% 11:39 ETA 10:09 ████▎     43.1% 11:40 ETA 10:11 ████▎     43.2% 11:41 ETA 10:08 ████▎     43.3% 11:42 ETA 10:06 ████▎     43.4% 11:43 ETA 10:05 ████▎     43.5% 11:44 ETA 09:56 ████▎     43.6% 11:45 ETA 09:56 ████▎     43.7% 11:46 ETA 09:59 ████▎     43.8% 11:47 ETA 09:55 ████▍     43.9% 11:49 ETA 10:00 ████▍     44.0% 11:50 ETA 10:12 ████▍     44.1% 11:51 ETA 10:02 ████▍     44.2% 11:52 ETA 10:04 ████▍     44.3% 11:53 ETA 10:03 ████▍     44.4% 11:54 ETA 09:53 ████▍     44.5% 11:55 ETA 09:53 ████▍     44.6% 11:56 ETA 09:48 ████▍     44.7% 11:57 ETA 09:45 ████▍     44.8% 11:58 ETA 09:44 ████▍     44.9% 11:59 ETA 09:36 ████▍     45.0% 12:00 ETA 09:30 ████▌     45.1% 12:01 ETA 09:26 ████▌     45.2% 12:02 ETA 09:18 ████▌     45.3% 12:03 ETA 09:15 ████▌     45.4% 12:04 ETA 09:10 ████▌     45.5% 12:05 ETA 09:10 ████▌     45.6% 12:06 ETA 09:04 ████▌     45.7% 12:07 ETA 09:06 ████▌     45.9% 12:08 ETA 09:00 ████▌     46.0% 12:09 ETA 08:56 ████▌     46.1% 12:10 ETA 08:53 ████▌     46.2% 12:11 ETA 08:43 ████▌     46.3% 12:12 ETA 08:40 ████▋     46.4% 12:13 ETA 08:38 ████▋     46.5% 12:14 ETA 08:41 ████▋     46.6% 12:15 ETA 08:38 ████▋     46.7% 12:16 ETA 08:31 ████▋     46.9% 12:17 ETA 08:21 ████▋     47.0% 12:18 ETA 08:23 ████▋     47.1% 12:19 ETA 08:22 ████▋     47.2% 12:20 ETA 08:18 ████▋     47.3% 12:21 ETA 08:20 ████▋     47.4% 12:22 ETA 08:13 ████▋     47.5% 12:23 ETA 08:05 ████▊     47.6% 12:24 ETA 08:08 ████▊     47.7% 12:25 ETA 08:08 ████▊     47.9% 12:26 ETA 08:05 ████▊     48.0% 12:27 ETA 07:58 ████▊     48.1% 12:28 ETA 07:50 ████▊     48.2% 12:29 ETA 07:47 ████▊     48.3% 12:31 ETA 08:15 ████▊     48.4% 12:33 ETA 08:48 ████▊     48.5% 12:34 ETA 09:06 ████▊     48.6% 12:35 ETA 09:17 ████▊     48.7% 12:37 ETA 09:31 ████▊     48.8% 12:38 ETA 09:34 ████▉     48.9% 12:39 ETA 09:40 ████▉     49.0% 12:40 ETA 09:34 ████▉     49.1% 12:41 ETA 09:24 ████▉     49.2% 12:42 ETA 09:20 ████▉     49.3% 12:43 ETA 09:23 ████▉     49.4% 12:44 ETA 09:13 ████▉     49.5% 12:45 ETA 08:59 ████▉     49.7% 12:46 ETA 08:47 ████▉     49.8% 12:47 ETA 08:40 ████▉     49.9% 12:48 ETA 08:31 ████▉     50.0% 12:49 ETA 08:20 █████     50.1% 12:50 ETA 08:12 █████     50.2% 12:51 ETA 08:06 █████     50.3% 12:52 ETA 08:05 █████     50.5% 12:53 ETA 07:59 █████     50.6% 12:54 ETA 07:58 █████     50.7% 12:55 ETA 07:49 █████     50.8% 12:56 ETA 07:40 █████     50.9% 12:57 ETA 07:40 █████     51.0% 12:58 ETA 07:33 █████     51.2% 12:59 ETA 07:29 █████     51.3% 13:00 ETA 07:24 █████▏    51.4% 13:01 ETA 07:16 █████▏    51.5% 13:02 ETA 07:12 █████▏    51.6% 13:03 ETA 07:11 █████▏    51.8% 13:04 ETA 07:07 █████▏    51.9% 13:05 ETA 07:00 █████▏    52.0% 13:06 ETA 06:53 █████▏    52.2% 13:07 ETA 06:47 █████▏    52.3% 13:08 ETA 06:41 █████▏    52.4% 13:09 ETA 06:36 █████▏    52.5% 13:10 ETA 06:35 █████▎    52.7% 13:11 ETA 06:32 █████▎    52.8% 13:12 ETA 06:27 █████▎    52.9% 13:13 ETA 06:23 █████▎    53.1% 13:14 ETA 06:22 █████▎    53.2% 13:15 ETA 06:19 █████▎    53.3% 13:16 ETA 06:15 █████▎    53.5% 13:17 ETA 06:11 █████▎    53.6% 13:18 ETA 06:07 █████▎    53.7% 13:19 ETA 06:06 █████▎    53.8% 13:20 ETA 06:04 █████▍    54.0% 13:21 ETA 06:03 █████▍    54.1% 13:22 ETA 06:01 █████▍    54.2% 13:23 ETA 05:58 █████▍    54.4% 13:24 ETA 05:57 █████▍    54.5% 13:25 ETA 05:53 █████▍    54.6% 13:26 ETA 05:49 █████▍    54.8% 13:27 ETA 05:48 █████▍    54.9% 13:28 ETA 05:47 █████▍    55.1% 13:29 ETA 05:41 █████▌    55.2% 13:30 ETA 05:41 █████▌    55.3% 13:31 ETA 05:42 █████▌    55.5% 13:32 ETA 05:36 █████▌    55.6% 13:33 ETA 05:29 █████▌    55.8% 13:34 ETA 05:24 █████▌    55.9% 13:35 ETA 05:23 █████▌    56.1% 13:36 ETA 05:21 █████▌    56.2% 13:37 ETA 05:19 █████▌    56.3% 13:38 ETA 05:16 █████▋    56.5% 13:39 ETA 05:10 █████▋    56.7% 13:40 ETA 05:06 █████▋    56.8% 13:41 ETA 05:02 █████▋    57.0% 13:42 ETA 04:59 █████▋    57.1% 13:43 ETA 04:56 █████▋    57.3% 13:45 ETA 04:52 █████▋    57.5% 13:46 ETA 04:48 █████▋    57.6% 13:47 ETA 04:47 █████▊    57.8% 13:48 ETA 04:44 █████▊    57.9% 13:49 ETA 04:44 █████▊    58.1% 13:50 ETA 04:41 █████▊    58.2% 13:51 ETA 04:37 █████▊    58.4% 13:52 ETA 04:34 █████▊    58.6% 13:53 ETA 04:32 █████▊    58.7% 13:54 ETA 04:32 █████▊    58.9% 13:55 ETA 04:35 █████▉    59.0% 13:56 ETA 04:31 █████▉    59.2% 13:57 ETA 04:30 █████▉    59.3% 13:58 ETA 04:29 █████▉    59.5% 13:59 ETA 04:23 █████▉    59.7% 14:00 ETA 04:18 █████▉    59.9% 14:01 ETA 04:13 █████▉    60.1% 14:02 ETA 04:10 ██████    60.2% 14:03 ETA 04:06 ██████    60.4% 14:04 ETA 04:02 ██████    60.6% 14:05 ETA 03:58 ██████    60.8% 14:06 ETA 03:53 ██████    61.0% 14:07 ETA 03:47 ██████    61.2% 14:08 ETA 03:44 ██████    61.5% 14:09 ETA 03:36 ██████▏   61.7% 14:10 ETA 03:28 ██████▏   61.9% 14:11 ETA 03:22 ██████▏   62.2% 14:12 ETA 03:18 ██████▏   62.4% 14:13 ETA 03:12 ██████▏   62.7% 14:14 ETA 03:07 ██████▎   62.9% 14:15 ETA 03:03 ██████▎   63.1% 14:16 ETA 02:59 ██████▎   63.4% 14:17 ETA 02:54 ██████▎   63.7% 14:18 ETA 02:50 ██████▎   63.9% 14:19 ETA 02:45 ██████▍   64.2% 14:20 ETA 02:40 ██████▍   64.5% 14:21 ETA 02:36 ██████▍   64.8% 14:22 ETA 02:30 ██████▍   65.1% 14:23 ETA 02:25 ██████▌   65.4% 14:24 ETA 02:21 ██████▌   65.7% 14:25 ETA 02:16 ██████▌   66.1% 14:26 ETA 02:10 ██████▌   66.5% 14:27 ETA 02:05 ██████▋   66.9% 14:28 ETA 02:00 ██████▋   67.3% 14:29 ETA 01:54 ██████▋   67.8% 14:30 ETA 01:48 ██████▊   68.3% 14:31 ETA 01:42 ██████▊   68.8% 14:32 ETA 01:36 ██████▉   69.4% 14:33 ETA 01:30 ██████▉   70.0% 14:34 ETA 01:24 ███████   70.8% 14:35 ETA 01:18 ███████   71.7% 14:36 ETA 01:11 ███████▏  72.7% 14:37 ETA 01:04 ███████▎  73.9% 14:38 ETA 00:57 ███████▍  75.4% 14:39 ETA 00:50 ███████▌  77.4% 14:40 ETA 00:43 ███████▋  80.4% 14:41 ETA 00:34 ████████  84.7% 14:42 ETA 00:24 ████████▍ 91.3% 14:43 ETA 00:12 █████████▏100.0% 14:44 ETA 00:00 ██████████
1028 Loaded 50986768 edges
 0.0% 00:00 ETA ?            1.2% 00:01 ETA 01:20            2.4% 00:02 ETA 01:19 ▏          3.7% 00:03 ETA 01:18 ▎          5.1% 00:04 ETA 01:16 ▌          6.4% 00:05 ETA 01:15 ▋          7.4% 00:06 ETA 01:15 ▋          8.4% 00:07 ETA 01:20 ▊          9.0% 00:09 ETA 01:50 ▉          9.6% 00:13 ETA 02:28 ▉         10.1% 00:15 ETA 03:02 █         10.6% 00:18 ETA 03:30 █         11.1% 00:19 ETA 03:31 █         11.6% 00:20 ETA 03:25 █▏        12.3% 00:21 ETA 03:16 █▏        13.1% 00:22 ETA 03:06 █▎        13.9% 00:23 ETA 02:57 █▍        14.6% 00:24 ETA 02:50 █▍        15.3% 00:25 ETA 02:43 █▌        16.1% 00:26 ETA 02:35 █▌        17.3% 00:27 ETA 02:25 █▋        18.4% 00:28 ETA 02:16 █▊        19.8% 00:29 ETA 02:06 █▉        21.0% 00:30 ETA 01:58 ██        22.3% 00:31 ETA 01:51 ██▏       23.5% 00:32 ETA 01:45 ██▎       24.6% 00:33 ETA 01:39 ██▍       25.8% 00:34 ETA 01:34 ██▌       27.0% 00:35 ETA 01:29 ██▋       28.2% 00:36 ETA 01:25 ██▊       29.5% 00:37 ETA 01:21 ██▉       30.7% 00:38 ETA 01:17 ███       32.0% 00:39 ETA 01:13 ███▏      33.1% 00:40 ETA 01:10 ███▎      34.5% 00:41 ETA 01:07 ███▍      35.7% 00:42 ETA 01:05 ███▌      37.0% 00:43 ETA 01:02 ███▋      38.1% 00:44 ETA 01:00 ███▊      39.3% 00:45 ETA 00:58 ███▉      40.7% 00:46 ETA 00:56 ████      42.1% 00:47 ETA 00:53 ████▏     43.6% 00:48 ETA 00:50 ████▎     45.0% 00:49 ETA 00:48 ████▌     46.2% 00:50 ETA 00:47 ████▌     47.5% 00:51 ETA 00:45 ████▋     48.7% 00:52 ETA 00:44 ████▊     50.0% 00:53 ETA 00:42 ████▉     51.3% 00:54 ETA 00:41 █████▏    52.8% 00:55 ETA 00:39 █████▎    54.0% 00:56 ETA 00:38 █████▍    55.3% 00:58 ETA 00:37 █████▌    56.5% 00:59 ETA 00:36 █████▋    57.8% 01:00 ETA 00:35 █████▊    59.2% 01:01 ETA 00:33 █████▉    60.7% 01:02 ETA 00:32 ██████    61.9% 01:03 ETA 00:30 ██████▏   63.4% 01:04 ETA 00:29 ██████▎   65.0% 01:05 ETA 00:27 ██████▌   66.4% 01:06 ETA 00:26 ██████▋   67.9% 01:07 ETA 00:24 ██████▊   69.7% 01:08 ETA 00:22 ██████▉   71.0% 01:09 ETA 00:21 ███████   72.7% 01:10 ETA 00:19 ███████▎  74.4% 01:11 ETA 00:18 ███████▍  76.3% 01:12 ETA 00:16 ███████▋  78.4% 01:13 ETA 00:14 ███████▊  80.6% 01:14 ETA 00:12 ████████  82.2% 01:19 ETA 00:16 ████████▏ 83.6% 01:23 ETA 00:18 ████████▎ 85.0% 01:27 ETA 00:19 ████████▍ 86.3% 01:31 ETA 00:19 ████████▋ 87.4% 01:34 ETA 00:19 ████████▋ 88.5% 01:37 ETA 00:19 ████████▊ 89.5% 01:40 ETA 00:18 ████████▉ 90.5% 01:42 ETA 00:17 █████████ 91.4% 01:43 ETA 00:15 █████████▏92.8% 01:45 ETA 00:12 █████████▎94.1% 01:46 ETA 00:09 █████████▍98.0% 01:47 ETA 00:02 █████████▊100.0% 01:47 ETA 00:00 ██████████
1136 Removed 26497384 edges with fewer than 10 common minimizers of 50986768 (51.97%)
1136 Removed 14516 isolated vertices.
1136 V=144244 E=24489384 E/V=169.78
1245 Wrote the graph
mlr --tsvlite filter '$n >= 30' f1chr2R.indexlr.n100-1000.c2-x.physlr.overlap.tsv >f1chr2R.indexlr.n100-1000.c2-x.physlr.overlap.n30.tsv
command gtime -v -o f1chr2R.indexlr.n100-1000.c2-x.physlr.overlap.n30.mol.tsv.time env PYTHONPATH=.. pypy3 ../bin/physlr molecules -t16 f1chr2R.indexlr.n100-1000.c2-x.physlr.overlap.n30.tsv >f1chr2R.indexlr.n100-1000.c2-x.physlr.overlap.n30.mol.tsv
0 Reading f1chr2R.indexlr.n100-1000.c2-x.physlr.overlap.n30.tsv
 0.0% 00:00 ETA ?            1.1% 00:01 ETA 01:30            2.3% 00:02 ETA 01:29 ▏          3.6% 00:03 ETA 01:26 ▎          4.2% 00:04 ETA 01:32 ▍          5.5% 00:05 ETA 01:30 ▌          6.1% 00:06 ETA 01:35 ▌          7.5% 00:07 ETA 01:31 ▋          8.1% 00:08 ETA 01:37 ▊          8.7% 00:09 ETA 01:41 ▊         10.0% 00:10 ETA 01:37 █         11.4% 00:11 ETA 01:32 █▏        12.1% 00:13 ETA 01:47 █▏        13.2% 00:14 ETA 01:43 █▎        14.6% 00:15 ETA 01:37 █▍        15.9% 00:16 ETA 01:33 █▌        16.7% 00:18 ETA 01:43 █▋        17.5% 00:19 ETA 01:49 █▊        18.5% 00:20 ETA 01:45 █▊        19.8% 00:21 ETA 01:40 █▉        20.9% 00:22 ETA 01:35 ██        22.2% 00:23 ETA 01:30 ██▏       23.1% 00:24 ETA 01:29 ██▎       24.0% 00:28 ETA 01:47 ██▍       24.8% 00:29 ETA 01:46 ██▍       25.7% 00:30 ETA 01:42 ██▌       26.9% 00:31 ETA 01:37 ██▋       28.1% 00:32 ETA 01:32 ██▊       29.3% 00:33 ETA 01:27 ██▉       30.5% 00:34 ETA 01:23 ███       31.7% 00:35 ETA 01:19 ███▏      32.6% 00:37 ETA 01:22 ███▎      33.6% 00:40 ETA 01:39 ███▎      34.4% 00:42 ETA 01:41 ███▍      35.4% 00:43 ETA 01:36 ███▌      36.3% 00:44 ETA 01:33 ███▋      37.4% 00:45 ETA 01:28 ███▋      38.6% 00:46 ETA 01:23 ███▊      39.7% 00:47 ETA 01:18 ███▉      40.9% 00:48 ETA 01:14 ████      42.0% 00:49 ETA 01:10 ████▏     43.1% 00:50 ETA 01:07 ████▎     44.3% 00:51 ETA 01:04 ████▍     45.4% 00:52 ETA 01:02 ████▌     46.4% 00:56 ETA 01:16 ████▋     47.3% 01:00 ETA 01:27 ████▋     48.2% 01:02 ETA 01:29 ████▊     49.1% 01:03 ETA 01:24 ████▉     50.0% 01:04 ETA 01:20 ████▉     50.9% 01:05 ETA 01:16 █████     51.8% 01:06 ETA 01:12 █████▏    52.9% 01:07 ETA 01:08 █████▎    53.9% 01:08 ETA 01:05 █████▍    54.9% 01:09 ETA 01:01 █████▍    56.0% 01:10 ETA 00:57 █████▌    57.0% 01:11 ETA 00:55 █████▋    58.0% 01:12 ETA 00:52 █████▊    59.1% 01:13 ETA 00:50 █████▉    60.2% 01:14 ETA 00:47 ██████    61.2% 01:15 ETA 00:45 ██████    62.3% 01:16 ETA 00:43 ██████▏   63.3% 01:17 ETA 00:41 ██████▎   64.3% 01:21 ETA 00:52 ██████▍   65.2% 01:25 ETA 01:00 ██████▌   66.0% 01:28 ETA 01:05 ██████▌   66.8% 01:30 ETA 01:08 ██████▋   67.6% 01:31 ETA 01:03 ██████▊   68.4% 01:32 ETA 00:59 ██████▊   69.2% 01:33 ETA 00:56 ██████▉   70.0% 01:34 ETA 00:53 ███████   70.8% 01:35 ETA 00:50 ███████   71.7% 01:36 ETA 00:47 ███████▏  72.6% 01:37 ETA 00:43 ███████▎  73.6% 01:38 ETA 00:40 ███████▎  74.5% 01:39 ETA 00:38 ███████▍  75.5% 01:40 ETA 00:35 ███████▌  76.4% 01:41 ETA 00:33 ███████▋  77.4% 01:42 ETA 00:31 ███████▋  78.3% 01:43 ETA 00:29 ███████▊  79.2% 01:44 ETA 00:27 ███████▉  80.2% 01:45 ETA 00:25 ████████  81.1% 01:46 ETA 00:24 ████████  82.1% 01:47 ETA 00:22 ████████▏ 83.0% 01:48 ETA 00:21 ████████▎ 83.9% 01:50 ETA 00:19 ████████▍ 84.8% 01:51 ETA 00:19 ████████▍ 85.6% 01:52 ETA 00:18 ████████▌ 86.5% 01:54 ETA 00:18 ████████▋ 87.3% 01:55 ETA 00:17 ████████▋ 88.1% 01:58 ETA 00:19 ████████▊ 88.8% 02:02 ETA 00:22 ████████▉ 89.5% 02:05 ETA 00:24 ████████▉ 90.1% 02:08 ETA 00:24 █████████ 90.7% 02:11 ETA 00:24 █████████ 91.2% 02:13 ETA 00:24 █████████ 91.8% 02:14 ETA 00:23 █████████▏92.3% 02:16 ETA 00:21 █████████▏92.8% 02:17 ETA 00:20 █████████▎93.6% 02:18 ETA 00:17 █████████▎94.3% 02:19 ETA 00:14 █████████▍95.1% 02:20 ETA 00:11 █████████▌95.9% 02:22 ETA 00:09 █████████▌96.6% 02:23 ETA 00:07 █████████▋97.4% 02:24 ETA 00:05 █████████▋98.1% 02:25 ETA 00:03 █████████▊99.0% 02:26 ETA 00:02 █████████▉100.0% 02:27 ETA 00:00 █████████▉100.0% 02:27 ETA 00:00 ██████████
147 Read f1chr2R.indexlr.n100-1000.c2-x.physlr.overlap.n30.tsv
147 Separating barcodes into molecules
 0.0% 00:00 ETA ?            2.3% 00:04 ETA 02:55 ▏          2.5% 00:05 ETA 03:55 ▏          3.4% 00:08 ETA 04:00 ▎          3.6% 00:09 ETA 05:08 ▎          4.0% 00:10 ETA 05:01 ▍          4.6% 00:13 ETA 05:12 ▍          4.7% 00:15 ETA 06:48 ▍          5.3% 00:16 ETA 06:21 ▌          5.7% 00:18 ETA 06:42 ▌          5.8% 00:20 ETA 07:42 ▌          6.2% 00:21 ETA 07:20 ▌          6.7% 00:22 ETA 06:54 ▋          6.9% 00:24 ETA 07:50 ▋          7.2% 00:25 ETA 07:47 ▋          7.8% 00:26 ETA 07:13 ▊          8.0% 00:28 ETA 07:46 ▊          8.3% 00:30 ETA 07:50 ▊          8.9% 00:31 ETA 07:15 ▉          9.2% 00:32 ETA 07:31 ▉          9.4% 00:34 ETA 07:38 ▉          9.8% 00:35 ETA 07:15 ▉         10.2% 00:36 ETA 07:04 █         10.4% 00:37 ETA 07:00 █         10.7% 00:39 ETA 07:03 █         11.1% 00:40 ETA 06:42 █         11.3% 00:41 ETA 06:36 █▏        11.6% 00:42 ETA 06:35 █▏        11.9% 00:43 ETA 06:45 █▏        12.3% 00:45 ETA 06:28 █▏        12.5% 00:46 ETA 06:25 █▎        12.8% 00:47 ETA 06:23 █▎        13.1% 00:49 ETA 06:35 █▎        13.6% 00:50 ETA 06:18 █▎        14.0% 00:51 ETA 06:07 █▍        14.2% 00:53 ETA 06:19 █▍        14.5% 00:54 ETA 06:14 █▍        14.9% 00:55 ETA 06:00 █▍        15.1% 00:57 ETA 06:22 █▌        15.4% 00:58 ETA 06:18 █▌        15.9% 01:00 ETA 06:09 █▌        16.2% 01:01 ETA 06:08 █▌        16.6% 01:02 ETA 05:50 █▋        16.9% 01:03 ETA 05:50 █▋        17.1% 01:04 ETA 05:48 █▋        17.4% 01:05 ETA 05:49 █▋        17.7% 01:07 ETA 05:46 █▊        18.0% 01:08 ETA 05:36 █▊        18.3% 01:09 ETA 05:35 █▊        18.6% 01:10 ETA 05:37 █▊        18.9% 01:11 ETA 05:27 █▉        19.3% 01:12 ETA 05:22 █▉        19.7% 01:14 ETA 05:10 █▉        20.0% 01:15 ETA 05:11 █▉        20.3% 01:16 ETA 05:03 ██        20.8% 01:17 ETA 04:57 ██        21.1% 01:18 ETA 04:50 ██        21.4% 01:20 ETA 05:07 ██▏       21.9% 01:21 ETA 04:56 ██▏       22.3% 01:23 ETA 04:54 ██▏       22.7% 01:24 ETA 04:48 ██▎       23.0% 01:25 ETA 04:41 ██▎       23.4% 01:27 ETA 04:45 ██▎       23.8% 01:28 ETA 04:38 ██▍       24.2% 01:30 ETA 04:38 ██▍       24.6% 01:31 ETA 04:28 ██▍       24.9% 01:32 ETA 04:34 ██▍       25.2% 01:33 ETA 04:39 ██▌       25.7% 01:35 ETA 04:30 ██▌       26.2% 01:36 ETA 04:24 ██▌       26.5% 01:37 ETA 04:28 ██▋       26.9% 01:39 ETA 04:35 ██▋       27.3% 01:40 ETA 04:24 ██▋       27.8% 01:42 ETA 04:18 ██▊       28.1% 01:43 ETA 04:25 ██▊       28.4% 01:44 ETA 04:27 ██▊       28.8% 01:46 ETA 04:18 ██▉       29.1% 01:47 ETA 04:28 ██▉       29.5% 01:48 ETA 04:21 ██▉       30.0% 01:49 ETA 04:09 ███       30.3% 01:51 ETA 04:19 ███       30.7% 01:52 ETA 04:10 ███       31.1% 01:53 ETA 04:04 ███       31.4% 01:54 ETA 04:03 ███▏      31.7% 02:08 ETA 08:46 ███▏      31.7% 02:09 ETA 15:45 ███▏      31.8% 02:14 ETA 21:52 ███▏      31.8% 02:16 ETA 29:28 ███▏      31.9% 02:20 ETA 30:21 ███▏      32.0% 02:22 ETA 29:37 ███▏      32.7% 02:23 ETA 26:33 ███▎      33.1% 02:26 ETA 24:33 ███▎      33.5% 02:27 ETA 22:18 ███▎      33.9% 02:28 ETA 20:09 ███▍      34.2% 02:30 ETA 19:01 ███▍      34.7% 02:31 ETA 17:13 ███▍      35.1% 02:32 ETA 15:41 ███▌      35.3% 02:34 ETA 15:04 ███▌      35.7% 02:35 ETA 13:49 ███▌      36.0% 02:36 ETA 12:41 ███▌      36.4% 02:38 ETA 11:42 ███▋      36.6% 02:39 ETA 11:00 ███▋      36.8% 02:40 ETA 10:24 ███▋      37.2% 02:41 ETA 09:39 ███▋      37.6% 02:42 ETA 08:56 ███▊      37.9% 02:43 ETA 08:19 ███▊      38.2% 02:45 ETA 08:08 ███▊      38.4% 02:46 ETA 07:43 ███▊      39.1% 02:47 ETA 07:04 ███▉      39.3% 02:48 ETA 06:51 ███▉      39.6% 02:50 ETA 06:34 ███▉      40.1% 02:51 ETA 06:03 ████      40.4% 02:53 ETA 06:15 ████      41.0% 02:54 ETA 05:45 ████      41.4% 02:56 ETA 05:38 ████▏     41.9% 02:58 ETA 05:17 ████▏     42.5% 02:59 ETA 04:52 ████▎     42.8% 03:01 ETA 05:06 ████▎     43.3% 03:02 ETA 04:46 ████▎     43.6% 03:04 ETA 04:37 ████▎     43.9% 03:05 ETA 04:30 ████▍     44.3% 03:06 ETA 04:17 ████▍     44.7% 03:07 ETA 04:08 ████▍     45.1% 03:09 ETA 04:06 ████▌     45.4% 03:10 ETA 04:01 ████▌     45.9% 03:11 ETA 03:47 ████▌     46.2% 03:13 ETA 03:51 ████▌     46.5% 03:14 ETA 03:45 ████▋     47.1% 03:15 ETA 03:35 ████▋     47.4% 03:16 ETA 03:31 ████▋     47.8% 03:18 ETA 03:26 ████▊     48.2% 03:19 ETA 03:23 ████▊     48.5% 03:20 ETA 03:17 ████▊     48.8% 03:21 ETA 03:17 ████▉     49.3% 03:23 ETA 03:09 ████▉     49.6% 03:24 ETA 03:07 ████▉     49.9% 03:25 ETA 03:12 ████▉     50.5% 03:26 ETA 03:00 █████     50.8% 03:28 ETA 03:07 █████     51.1% 03:29 ETA 03:04 █████     51.6% 03:31 ETA 02:57 █████▏    51.9% 03:32 ETA 02:58 █████▏    52.2% 03:33 ETA 02:56 █████▏    52.7% 03:34 ETA 02:52 █████▎    53.0% 03:36 ETA 02:52 █████▎    53.4% 03:37 ETA 02:48 █████▎    53.7% 03:38 ETA 02:44 █████▎    54.0% 03:39 ETA 02:44 █████▍    54.4% 03:40 ETA 02:42 █████▍    54.7% 03:42 ETA 02:43 █████▍    55.1% 03:43 ETA 02:42 █████▌    55.5% 03:44 ETA 02:39 █████▌    55.8% 03:46 ETA 02:53 █████▌    56.0% 03:49 ETA 03:11 █████▌    56.3% 03:50 ETA 03:10 █████▋    56.6% 03:51 ETA 03:05 █████▋    56.9% 03:52 ETA 03:14 █████▋    57.1% 03:54 ETA 03:14 █████▋    57.6% 03:55 ETA 03:06 █████▊    57.9% 03:56 ETA 03:01 █████▊    58.3% 03:57 ETA 02:53 █████▊    58.5% 03:59 ETA 02:53 █████▊    58.8% 04:00 ETA 02:49 █████▉    59.3% 04:01 ETA 02:43 █████▉    59.6% 04:02 ETA 02:43 █████▉    60.2% 04:04 ETA 02:33 ██████    60.5% 04:05 ETA 02:37 ██████    60.7% 04:06 ETA 02:37 ██████    61.2% 04:07 ETA 02:27 ██████    61.6% 04:09 ETA 02:26 ██████▏   61.9% 04:10 ETA 02:28 ██████▏   62.3% 04:11 ETA 02:21 ██████▏   62.7% 04:13 ETA 02:21 ██████▎   63.0% 04:14 ETA 02:26 ██████▎   63.8% 04:15 ETA 02:14 ██████▍   64.1% 04:18 ETA 02:25 ██████▍   64.4% 04:19 ETA 02:21 ██████▍   64.9% 04:20 ETA 02:16 ██████▍   65.2% 04:22 ETA 02:17 ██████▌   65.9% 04:23 ETA 02:06 ██████▌   66.3% 04:25 ETA 02:14 ██████▋   66.6% 04:26 ETA 02:09 ██████▋   67.1% 04:27 ETA 02:02 ██████▋   67.4% 04:29 ETA 02:09 ██████▋   67.9% 04:30 ETA 02:03 ██████▊   68.2% 04:32 ETA 01:59 ██████▊   68.6% 04:33 ETA 02:01 ██████▊   68.9% 04:34 ETA 01:58 ██████▉   69.4% 04:35 ETA 01:52 ██████▉   69.7% 04:37 ETA 01:54 ██████▉   70.1% 04:38 ETA 01:50 ███████   70.4% 04:39 ETA 01:48 ███████   70.7% 04:41 ETA 01:53 ███████   71.3% 04:42 ETA 01:46 ███████▏  71.6% 04:44 ETA 01:52 ███████▏  72.2% 04:45 ETA 01:46 ███████▏  72.6% 04:47 ETA 01:43 ███████▎  72.9% 04:49 ETA 01:46 ███████▎  73.2% 04:50 ETA 01:42 ███████▎  73.7% 04:51 ETA 01:36 ███████▎  74.0% 04:52 ETA 01:41 ███████▍  74.4% 04:53 ETA 01:36 ███████▍  74.9% 04:55 ETA 01:31 ███████▍  75.2% 04:56 ETA 01:30 ███████▌  75.5% 04:57 ETA 01:31 ███████▌  76.0% 04:58 ETA 01:26 ███████▌  76.3% 04:59 ETA 01:24 ███████▋  76.6% 05:01 ETA 01:24 ███████▋  77.0% 05:02 ETA 01:21 ███████▋  77.3% 05:03 ETA 01:20 ███████▋  77.6% 05:04 ETA 01:18 ███████▊  78.0% 05:05 ETA 01:16 ███████▊  78.3% 05:06 ETA 01:13 ███████▊  78.7% 05:07 ETA 01:12 ███████▊  79.0% 05:08 ETA 01:10 ███████▉  79.4% 05:10 ETA 01:12 ███████▉  79.8% 05:11 ETA 01:08 ███████▉  80.1% 05:12 ETA 01:07 ████████  80.4% 05:13 ETA 01:07 ████████  80.7% 05:14 ETA 01:06 ████████  81.1% 05:15 ETA 01:06 ████████  81.5% 05:17 ETA 01:02 ████████▏ 81.8% 05:18 ETA 01:02 ████████▏ 82.2% 05:19 ETA 01:01 ████████▏ 82.5% 05:20 ETA 01:00 ████████▏ 82.8% 05:21 ETA 00:59 ████████▎ 83.1% 05:22 ETA 00:58 ████████▎ 83.5% 05:24 ETA 00:56 ████████▎ 83.9% 05:25 ETA 00:53 ████████▍ 84.3% 05:26 ETA 00:54 ████████▍ 84.6% 05:28 ETA 00:53 ████████▍ 85.1% 05:29 ETA 00:51 ████████▌ 85.7% 05:31 ETA 00:48 ████████▌ 86.0% 05:32 ETA 00:48 ████████▌ 86.3% 05:33 ETA 00:47 ████████▋ 86.6% 05:34 ETA 00:46 ████████▋ 86.9% 05:35 ETA 00:46 ████████▋ 87.3% 05:37 ETA 00:44 ████████▋ 87.7% 05:38 ETA 00:43 ████████▊ 88.0% 05:39 ETA 00:43 ████████▊ 88.3% 05:40 ETA 00:41 ████████▊ 88.7% 05:41 ETA 00:39 ████████▊ 89.0% 05:43 ETA 00:40 ████████▉ 89.5% 05:44 ETA 00:37 ████████▉ 89.8% 05:46 ETA 00:37 ████████▉ 90.2% 05:47 ETA 00:35 █████████ 90.6% 05:48 ETA 00:32 █████████ 90.9% 05:49 ETA 00:32 █████████ 91.2% 05:50 ETA 00:31 █████████ 91.7% 05:52 ETA 00:29 █████████▏92.0% 05:53 ETA 00:28 █████████▏92.3% 05:54 ETA 00:28 █████████▏92.6% 05:55 ETA 00:26 █████████▎93.1% 05:56 ETA 00:23 █████████▎93.4% 05:57 ETA 00:22 █████████▎93.7% 05:59 ETA 00:22 █████████▎94.1% 06:00 ETA 00:20 █████████▍94.4% 06:01 ETA 00:19 █████████▍94.7% 06:02 ETA 00:19 █████████▍95.2% 06:03 ETA 00:16 █████████▌95.5% 06:05 ETA 00:16 █████████▌95.8% 06:06 ETA 00:15 █████████▌96.1% 06:07 ETA 00:13 █████████▌96.5% 06:08 ETA 00:12 █████████▋96.9% 06:09 ETA 00:11 █████████▋97.2% 06:10 ETA 00:09 █████████▋97.6% 06:11 ETA 00:08 █████████▊97.9% 06:13 ETA 00:07 █████████▊98.2% 06:14 ETA 00:06 █████████▊98.6% 06:15 ETA 00:04 █████████▊98.9% 06:17 ETA 00:03 █████████▉99.2% 06:18 ETA 00:02 █████████▉99.8% 06:19 ETA 00:00 █████████▉100.0% 06:20 ETA 00:00 ██████████
541 Identified molecules
542 Identified 132651 molecules in 142588 barcodes. 0.93 mean molecules per barcode
747 Separated molecules
826 Wrote graph
command gtime -v -o f1chr2R.indexlr.n100-1000.c2-x.physlr.overlap.n30.mol.backbone.tsv.time env PYTHONPATH=.. pypy3 ../bin/physlr backbone-graph f1chr2R.indexlr.n100-1000.c2-x.physlr.overlap.n30.mol.tsv >f1chr2R.indexlr.n100-1000.c2-x.physlr.overlap.n30.mol.backbone.tsv
0 Reading f1chr2R.indexlr.n100-1000.c2-x.physlr.overlap.n30.mol.tsv
 0.0% 00:00 ETA ?            1.2% 00:01 ETA 01:25            2.3% 00:02 ETA 01:25 ▏          3.4% 00:03 ETA 01:24 ▎          4.0% 00:04 ETA 01:31 ▍          5.2% 00:05 ETA 01:29 ▌          5.7% 00:06 ETA 01:42 ▌          6.8% 00:07 ETA 01:39 ▋          7.7% 00:08 ETA 01:39 ▊          8.2% 00:09 ETA 01:51 ▊          9.3% 00:10 ETA 01:48 ▉         10.4% 00:11 ETA 01:44 █         11.1% 00:12 ETA 01:45 █         11.8% 00:14 ETA 02:01 █▏        12.7% 00:15 ETA 01:57 █▎        13.8% 00:16 ETA 01:52 █▍        15.0% 00:17 ETA 01:47 █▍        15.9% 00:18 ETA 01:44 █▌        16.6% 00:21 ETA 02:05 █▋        17.4% 00:22 ETA 02:02 █▋        18.4% 00:23 ETA 01:57 █▊        19.5% 00:24 ETA 01:51 █▉        20.5% 00:25 ETA 01:46 ██        21.6% 00:26 ETA 01:42 ██▏       22.4% 00:27 ETA 01:42 ██▏       23.3% 00:31 ETA 02:04 ██▎       24.0% 00:32 ETA 02:05 ██▍       24.9% 00:33 ETA 01:59 ██▍       25.8% 00:34 ETA 01:54 ██▌       26.9% 00:35 ETA 01:48 ██▋       27.9% 00:36 ETA 01:43 ██▊       28.9% 00:37 ETA 01:38 ██▉       29.9% 00:38 ETA 01:34 ██▉       31.0% 00:39 ETA 01:30 ███       31.8% 00:42 ETA 01:38 ███▏      32.6% 00:45 ETA 01:58 ███▎      33.4% 00:47 ETA 02:01 ███▎      34.2% 00:48 ETA 01:55 ███▍      35.0% 00:49 ETA 01:52 ███▍      35.7% 00:50 ETA 01:50 ███▌      36.4% 00:51 ETA 01:48 ███▋      37.2% 00:52 ETA 01:45 ███▋      37.9% 00:53 ETA 01:42 ███▊      38.7% 00:54 ETA 01:39 ███▊      39.4% 00:56 ETA 01:36 ███▉      40.2% 00:57 ETA 01:32 ████      41.1% 00:58 ETA 01:28 ████      42.1% 00:59 ETA 01:24 ████▏     43.0% 01:00 ETA 01:20 ████▎     44.0% 01:01 ETA 01:17 ████▍     44.8% 01:04 ETA 01:33 ████▍     45.6% 01:08 ETA 01:47 ████▌     46.3% 01:10 ETA 01:52 ████▋     46.9% 01:11 ETA 01:51 ████▋     47.8% 01:12 ETA 01:44 ████▊     48.7% 01:13 ETA 01:38 ████▊     49.5% 01:14 ETA 01:33 ████▉     50.4% 01:15 ETA 01:28 █████     51.4% 01:16 ETA 01:23 █████▏    52.3% 01:17 ETA 01:18 █████▏    53.3% 01:18 ETA 01:14 █████▎    54.2% 01:19 ETA 01:10 █████▍    55.2% 01:20 ETA 01:06 █████▌    56.1% 01:21 ETA 01:03 █████▌    57.0% 01:22 ETA 01:00 █████▋    58.0% 01:23 ETA 00:57 █████▊    58.9% 01:24 ETA 00:55 █████▉    59.8% 01:25 ETA 00:52 █████▉    60.8% 01:26 ETA 00:50 ██████    61.7% 01:27 ETA 00:48 ██████▏   62.5% 01:31 ETA 01:00 ██████▎   63.3% 01:35 ETA 01:12 ██████▎   64.1% 01:39 ETA 01:18 ██████▍   64.8% 01:41 ETA 01:20 ██████▍   65.4% 01:43 ETA 01:20 ██████▌   66.2% 01:44 ETA 01:15 ██████▌   67.0% 01:45 ETA 01:10 ██████▋   67.8% 01:46 ETA 01:05 ██████▊   68.5% 01:47 ETA 01:02 ██████▊   69.2% 01:48 ETA 00:59 ██████▉   70.1% 01:49 ETA 00:55 ███████   70.9% 01:50 ETA 00:51 ███████   71.8% 01:51 ETA 00:48 ███████▏  72.6% 01:52 ETA 00:45 ███████▎  73.5% 01:53 ETA 00:42 ███████▎  74.3% 01:54 ETA 00:40 ███████▍  75.2% 01:55 ETA 00:38 ███████▌  76.0% 01:56 ETA 00:36 ███████▌  76.9% 01:57 ETA 00:33 ███████▋  77.7% 01:58 ETA 00:32 ███████▊  78.6% 01:59 ETA 00:30 ███████▊  79.4% 02:00 ETA 00:28 ███████▉  80.3% 02:01 ETA 00:27 ████████  81.1% 02:02 ETA 00:25 ████████  81.9% 02:03 ETA 00:24 ████████▏ 82.7% 02:04 ETA 00:22 ████████▎ 83.6% 02:05 ETA 00:21 ████████▎ 84.4% 02:06 ETA 00:20 ████████▍ 85.2% 02:07 ETA 00:19 ████████▌ 86.1% 02:10 ETA 00:21 ████████▌ 86.8% 02:14 ETA 00:25 ████████▋ 87.5% 02:17 ETA 00:27 ████████▊ 88.2% 02:20 ETA 00:29 ████████▊ 88.8% 02:23 ETA 00:29 ████████▉ 89.3% 02:25 ETA 00:29 ████████▉ 89.9% 02:27 ETA 00:28 ████████▉ 90.4% 02:29 ETA 00:27 █████████ 91.1% 02:30 ETA 00:24 █████████ 91.8% 02:31 ETA 00:21 █████████▏92.5% 02:32 ETA 00:18 █████████▎93.2% 02:33 ETA 00:16 █████████▎93.9% 02:34 ETA 00:13 █████████▍94.6% 02:35 ETA 00:11 █████████▍95.3% 02:36 ETA 00:10 █████████▌96.0% 02:37 ETA 00:08 █████████▌96.8% 02:38 ETA 00:06 █████████▋97.6% 02:39 ETA 00:04 █████████▊98.4% 02:40 ETA 00:03 █████████▊99.2% 02:41 ETA 00:01 █████████▉100.0% 02:42 ETA 00:00 ██████████
162 Read f1chr2R.indexlr.n100-1000.c2-x.physlr.overlap.n30.mol.tsv
539 Determined the backbone paths
540 Output the backbone subgraph
env PYTHONPATH=.. pypy3 ../bin/physlr filter --min-component-size=50 -Ogv f1chr2R.indexlr.n100-1000.c2-x.physlr.overlap.n30.mol.backbone.tsv >f1chr2R.indexlr.n100-1000.c2-x.physlr.overlap.n30.mol.backbone.gv
0 Reading f1chr2R.indexlr.n100-1000.c2-x.physlr.overlap.n30.mol.backbone.tsv
 0.0% 00:00 ETA ?           100.0% 00:00 ETA 00:00 ██████████
0 Read f1chr2R.indexlr.n100-1000.c2-x.physlr.overlap.n30.mol.backbone.tsv
0 Removed 593 vertices in 80 components with fewer than 50 vertices in a component.
gvpr -c 'E { label = n }' f1chr2R.indexlr.n100-1000.c2-x.physlr.overlap.n30.mol.backbone.gv >f1chr2R.indexlr.n100-1000.c2-x.physlr.overlap.n30.mol.backbone.label.gv
neato -Goverlap=scale -Gsize=100,100 -Tpdf -o f1chr2R.indexlr.n100-1000.c2-x.physlr.overlap.n30.mol.backbone.label.gv.pdf f1chr2R.indexlr.n100-1000.c2-x.physlr.overlap.n30.mol.backbone.label.gv
bwa mem -t16 -pC fly/fly.fa f1chr2R.fq.gz | samtools view -@16 -F4 -o fly/fly.f1chr2R.sortn.bam
[M::bwa_idx_load_from_disk] read 0 ALT contigs
[M::process] read 1161812 sequences (160000050 bp)...
[M::process] 0 single-end sequences; 1161812 paired-end sequences
[M::process] read 1161528 sequences (160000216 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (10574, 458652, 6565, 8333)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (119, 193, 285)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 617)
[M::mem_pestat] mean and std.dev: (206.32, 119.92)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 783)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (253, 331, 419)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 751)
[M::mem_pestat] mean and std.dev: (336.15, 130.26)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 917)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (44, 100, 205)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 527)
[M::mem_pestat] mean and std.dev: (125.54, 112.08)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 688)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (131, 207, 296)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 626)
[M::mem_pestat] mean and std.dev: (214.87, 120.02)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 791)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 1161812 reads in 437.164 CPU sec, 27.546 real sec
[M::process] 0 single-end sequences; 1161528 paired-end sequences
[M::process] read 1162024 sequences (160000161 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (10851, 463686, 6930, 8731)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (119, 194, 284)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 614)
[M::mem_pestat] mean and std.dev: (204.08, 119.00)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 779)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (252, 331, 419)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 753)
[M::mem_pestat] mean and std.dev: (335.75, 130.82)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 920)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (42, 103, 199)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 513)
[M::mem_pestat] mean and std.dev: (122.82, 108.35)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 670)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (133, 205, 298)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 628)
[M::mem_pestat] mean and std.dev: (215.46, 121.11)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 793)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 1161528 reads in 405.801 CPU sec, 25.256 real sec
[M::process] 0 single-end sequences; 1162024 paired-end sequences
[M::process] read 1161640 sequences (160000014 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (10705, 455689, 6706, 8685)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (118, 194, 287)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 625)
[M::mem_pestat] mean and std.dev: (205.34, 119.89)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 794)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (252, 331, 418)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 750)
[M::mem_pestat] mean and std.dev: (335.09, 130.14)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 916)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (45, 105, 211)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 543)
[M::mem_pestat] mean and std.dev: (128.64, 113.50)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 709)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (132, 205, 296)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 624)
[M::mem_pestat] mean and std.dev: (213.32, 120.22)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 788)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 1162024 reads in 455.059 CPU sec, 28.280 real sec
[M::process] 0 single-end sequences; 1161640 paired-end sequences
[M::process] read 1162146 sequences (160000224 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (10514, 457179, 6681, 8789)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (119, 191, 282)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 608)
[M::mem_pestat] mean and std.dev: (203.31, 118.38)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 771)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (253, 331, 419)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 751)
[M::mem_pestat] mean and std.dev: (336.01, 130.20)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 917)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (43, 106, 213)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 553)
[M::mem_pestat] mean and std.dev: (131.01, 117.23)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 723)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (133, 205, 294)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 616)
[M::mem_pestat] mean and std.dev: (214.40, 118.38)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 777)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 1161640 reads in 448.474 CPU sec, 28.046 real sec
[M::process] 0 single-end sequences; 1162146 paired-end sequences
[M::process] read 1161638 sequences (160000261 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (11071, 457409, 6861, 8741)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (120, 196, 287)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 621)
[M::mem_pestat] mean and std.dev: (206.21, 118.85)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 788)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (252, 331, 418)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 750)
[M::mem_pestat] mean and std.dev: (335.26, 130.46)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 916)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (42, 101, 207)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 537)
[M::mem_pestat] mean and std.dev: (127.77, 114.07)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 702)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (137, 208, 296)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 614)
[M::mem_pestat] mean and std.dev: (216.00, 118.52)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 773)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 1162146 reads in 429.207 CPU sec, 27.321 real sec
[M::process] 0 single-end sequences; 1161638 paired-end sequences
[M::process] read 1161700 sequences (160000101 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (10464, 457015, 6525, 8456)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (120, 193, 287)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 621)
[M::mem_pestat] mean and std.dev: (206.31, 120.72)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 788)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (252, 331, 418)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 750)
[M::mem_pestat] mean and std.dev: (335.11, 130.24)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 916)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (41, 97, 207)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 539)
[M::mem_pestat] mean and std.dev: (124.61, 112.80)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 705)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (135, 207, 294)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 612)
[M::mem_pestat] mean and std.dev: (214.74, 117.37)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 771)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 1161638 reads in 435.201 CPU sec, 30.266 real sec
[M::process] 0 single-end sequences; 1161700 paired-end sequences
[M::process] read 1161620 sequences (160000068 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (11000, 460064, 6544, 8743)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (120, 195, 288)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 624)
[M::mem_pestat] mean and std.dev: (206.80, 118.93)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 792)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (252, 331, 418)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 750)
[M::mem_pestat] mean and std.dev: (335.10, 130.37)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 916)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (44, 102, 208)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 536)
[M::mem_pestat] mean and std.dev: (128.07, 113.68)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 700)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (132, 205, 292)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 612)
[M::mem_pestat] mean and std.dev: (213.72, 118.33)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 772)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 1161700 reads in 423.650 CPU sec, 26.344 real sec
[M::process] 0 single-end sequences; 1161620 paired-end sequences
[M::process] read 1161650 sequences (160000042 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (10824, 460538, 6996, 8864)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (117, 192, 285)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 621)
[M::mem_pestat] mean and std.dev: (203.72, 119.69)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 789)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (252, 331, 420)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 756)
[M::mem_pestat] mean and std.dev: (336.34, 131.03)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 924)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (46, 104, 214)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 550)
[M::mem_pestat] mean and std.dev: (130.83, 115.96)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 718)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (131, 203, 294)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 620)
[M::mem_pestat] mean and std.dev: (213.40, 118.92)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 783)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 1161620 reads in 414.908 CPU sec, 25.841 real sec
[M::process] 0 single-end sequences; 1161650 paired-end sequences
[M::process] read 1161838 sequences (160000195 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (10694, 457760, 6644, 8577)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (117, 194, 285)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 621)
[M::mem_pestat] mean and std.dev: (204.81, 119.56)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 789)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (253, 331, 419)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 751)
[M::mem_pestat] mean and std.dev: (335.70, 130.62)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 917)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (44, 102, 207)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 533)
[M::mem_pestat] mean and std.dev: (127.34, 113.39)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 696)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (132, 204, 292)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 612)
[M::mem_pestat] mean and std.dev: (213.61, 120.23)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 772)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 1161650 reads in 408.388 CPU sec, 25.453 real sec
[M::process] 0 single-end sequences; 1161838 paired-end sequences
[M::process] read 1161594 sequences (160000088 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (10526, 457227, 6838, 8356)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (120, 195, 288)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 624)
[M::mem_pestat] mean and std.dev: (206.72, 120.46)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 792)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (252, 331, 419)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 753)
[M::mem_pestat] mean and std.dev: (335.77, 130.65)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 920)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (46, 104, 211)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 541)
[M::mem_pestat] mean and std.dev: (128.76, 112.86)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 706)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (133, 204, 290)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 604)
[M::mem_pestat] mean and std.dev: (213.68, 118.26)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 761)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 1161838 reads in 410.719 CPU sec, 25.584 real sec
[M::process] 0 single-end sequences; 1161594 paired-end sequences
[M::process] read 1161704 sequences (160000107 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (10651, 458949, 6620, 8702)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (118, 193, 285)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 619)
[M::mem_pestat] mean and std.dev: (204.91, 120.34)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 786)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (252, 332, 419)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 753)
[M::mem_pestat] mean and std.dev: (336.23, 130.73)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 920)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (44, 102, 206)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 530)
[M::mem_pestat] mean and std.dev: (126.85, 112.46)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 692)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (132, 207, 297)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 627)
[M::mem_pestat] mean and std.dev: (214.50, 120.54)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 792)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 1161594 reads in 429.474 CPU sec, 26.746 real sec
[M::process] 0 single-end sequences; 1161704 paired-end sequences
[M::process] read 1161566 sequences (160000010 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (10874, 460155, 6673, 8948)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (118, 194, 287)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 625)
[M::mem_pestat] mean and std.dev: (204.43, 118.27)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 794)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (252, 331, 419)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 753)
[M::mem_pestat] mean and std.dev: (335.87, 130.65)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 920)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (43, 103, 210)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 544)
[M::mem_pestat] mean and std.dev: (130.47, 114.83)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 711)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (135, 205, 296)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 618)
[M::mem_pestat] mean and std.dev: (215.72, 120.04)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 779)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 1161704 reads in 429.015 CPU sec, 26.802 real sec
[M::process] 0 single-end sequences; 1161566 paired-end sequences
[M::process] read 1161562 sequences (160000134 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (11074, 460104, 6801, 8720)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (119, 194, 283)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 611)
[M::mem_pestat] mean and std.dev: (203.72, 117.68)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 775)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (253, 332, 419)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 751)
[M::mem_pestat] mean and std.dev: (336.15, 130.32)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 917)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (41, 102, 202)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 524)
[M::mem_pestat] mean and std.dev: (125.74, 112.60)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 685)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (131, 205, 295)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 623)
[M::mem_pestat] mean and std.dev: (213.43, 119.56)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 787)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 1161566 reads in 423.459 CPU sec, 26.367 real sec
[M::process] 0 single-end sequences; 1161562 paired-end sequences
[M::process] read 1161708 sequences (160000023 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (10955, 458776, 6883, 8800)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (118, 196, 283)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 613)
[M::mem_pestat] mean and std.dev: (203.74, 118.35)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 778)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (253, 331, 419)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 751)
[M::mem_pestat] mean and std.dev: (335.84, 130.34)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 917)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (43, 102, 203)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 523)
[M::mem_pestat] mean and std.dev: (124.23, 110.17)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 683)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (132, 205, 291)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 609)
[M::mem_pestat] mean and std.dev: (212.18, 117.34)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 768)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 1161562 reads in 435.708 CPU sec, 27.161 real sec
[M::process] 0 single-end sequences; 1161708 paired-end sequences
[M::process] read 1161646 sequences (160000049 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (10557, 458887, 6774, 8672)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (119, 194, 283)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 611)
[M::mem_pestat] mean and std.dev: (205.10, 118.91)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 775)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (252, 330, 417)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 747)
[M::mem_pestat] mean and std.dev: (334.92, 129.95)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 912)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (43, 104, 214)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 556)
[M::mem_pestat] mean and std.dev: (130.58, 115.99)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 727)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (133, 206, 294)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 616)
[M::mem_pestat] mean and std.dev: (214.51, 118.82)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 777)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 1161708 reads in 487.030 CPU sec, 32.612 real sec
[M::process] 0 single-end sequences; 1161646 paired-end sequences
[M::process] read 1161906 sequences (160000127 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (10727, 458245, 6409, 8803)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (117, 195, 287)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 627)
[M::mem_pestat] mean and std.dev: (205.17, 118.91)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 797)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (252, 330, 418)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 750)
[M::mem_pestat] mean and std.dev: (335.39, 130.38)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 916)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (42, 100, 207)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 537)
[M::mem_pestat] mean and std.dev: (125.30, 112.32)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 702)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (131, 202, 287)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 599)
[M::mem_pestat] mean and std.dev: (210.02, 116.33)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 755)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 1161646 reads in 400.542 CPU sec, 24.987 real sec
[M::process] 0 single-end sequences; 1161906 paired-end sequences
[M::process] read 1161512 sequences (160000238 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (10525, 458115, 6910, 8403)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (118, 194, 287)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 625)
[M::mem_pestat] mean and std.dev: (205.90, 120.20)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 794)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (252, 331, 419)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 753)
[M::mem_pestat] mean and std.dev: (335.49, 130.63)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 920)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (42, 101, 204)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 528)
[M::mem_pestat] mean and std.dev: (123.47, 110.55)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 690)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (133, 203, 295)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 619)
[M::mem_pestat] mean and std.dev: (213.28, 118.57)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 781)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 1161906 reads in 410.735 CPU sec, 25.580 real sec
[M::process] 0 single-end sequences; 1161512 paired-end sequences
[M::process] read 1161924 sequences (160000200 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (10625, 461543, 6759, 8796)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (116, 192, 286)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 626)
[M::mem_pestat] mean and std.dev: (203.38, 120.55)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 796)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (252, 331, 418)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 750)
[M::mem_pestat] mean and std.dev: (335.21, 130.53)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 916)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (43, 105, 214)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 556)
[M::mem_pestat] mean and std.dev: (129.22, 116.38)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 727)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (132, 204, 293)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 615)
[M::mem_pestat] mean and std.dev: (213.61, 119.74)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 776)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 1161512 reads in 405.644 CPU sec, 25.250 real sec
[M::process] 0 single-end sequences; 1161924 paired-end sequences
[M::process] read 1161582 sequences (160000270 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (10582, 458268, 6799, 8393)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (119, 193, 281)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 605)
[M::mem_pestat] mean and std.dev: (203.48, 117.28)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 767)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (253, 331, 419)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 751)
[M::mem_pestat] mean and std.dev: (336.03, 130.44)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 917)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (44, 104, 207)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 533)
[M::mem_pestat] mean and std.dev: (125.96, 109.74)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 696)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (128, 204, 295)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 629)
[M::mem_pestat] mean and std.dev: (213.39, 120.72)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 796)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 1161924 reads in 451.939 CPU sec, 28.141 real sec
[M::process] 0 single-end sequences; 1161582 paired-end sequences
[M::process] read 1161616 sequences (160000010 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (10523, 458080, 6314, 8380)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (119, 193, 284)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 614)
[M::mem_pestat] mean and std.dev: (203.81, 118.44)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 779)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (252, 331, 419)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 753)
[M::mem_pestat] mean and std.dev: (335.91, 130.47)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 920)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (42, 102, 209)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 543)
[M::mem_pestat] mean and std.dev: (126.25, 112.66)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 710)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (133, 207, 296)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 622)
[M::mem_pestat] mean and std.dev: (214.08, 119.83)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 785)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 1161582 reads in 405.732 CPU sec, 25.337 real sec
[M::process] 0 single-end sequences; 1161616 paired-end sequences
[M::process] read 1161628 sequences (160000197 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (10998, 459928, 6724, 8706)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (121, 196, 286)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 616)
[M::mem_pestat] mean and std.dev: (207.13, 119.03)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 781)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (253, 332, 420)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 754)
[M::mem_pestat] mean and std.dev: (336.57, 130.73)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 921)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (41, 101, 209)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 545)
[M::mem_pestat] mean and std.dev: (127.10, 115.52)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 713)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (135, 210, 298)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 624)
[M::mem_pestat] mean and std.dev: (218.04, 119.21)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 787)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 1161616 reads in 405.574 CPU sec, 25.263 real sec
[M::process] 0 single-end sequences; 1161628 paired-end sequences
[M::process] read 1161500 sequences (160000094 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (10958, 459890, 6853, 8580)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (121, 198, 287)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 619)
[M::mem_pestat] mean and std.dev: (207.22, 118.59)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 785)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (253, 331, 419)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 751)
[M::mem_pestat] mean and std.dev: (336.02, 130.23)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 917)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (44, 104, 213)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 551)
[M::mem_pestat] mean and std.dev: (130.49, 116.37)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 720)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (134, 208, 297)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 623)
[M::mem_pestat] mean and std.dev: (215.59, 120.34)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 786)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 1161628 reads in 413.620 CPU sec, 25.764 real sec
[M::process] 0 single-end sequences; 1161500 paired-end sequences
[M::process] read 1161414 sequences (160000144 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (10756, 453548, 6787, 8464)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (118, 192, 285)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 619)
[M::mem_pestat] mean and std.dev: (204.19, 119.90)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 786)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (253, 331, 419)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 751)
[M::mem_pestat] mean and std.dev: (335.95, 130.43)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 917)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (45, 103, 210)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 540)
[M::mem_pestat] mean and std.dev: (128.11, 113.57)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 705)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (137, 208, 298)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 620)
[M::mem_pestat] mean and std.dev: (216.13, 117.11)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 781)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 1161500 reads in 413.306 CPU sec, 25.709 real sec
[M::process] 0 single-end sequences; 1161414 paired-end sequences
[M::process] read 1161496 sequences (160000143 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (10847, 459780, 6662, 8612)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (120, 196, 285)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 615)
[M::mem_pestat] mean and std.dev: (206.26, 118.66)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 780)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (253, 332, 421)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 757)
[M::mem_pestat] mean and std.dev: (337.30, 131.57)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 925)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (42, 101, 208)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 540)
[M::mem_pestat] mean and std.dev: (125.54, 112.28)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 706)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (136, 208, 295)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 613)
[M::mem_pestat] mean and std.dev: (216.65, 118.32)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 772)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 1161414 reads in 399.405 CPU sec, 24.928 real sec
[M::process] 0 single-end sequences; 1161496 paired-end sequences
[M::process] read 1161500 sequences (160000208 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (10599, 458623, 6477, 8577)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (121, 197, 288)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 622)
[M::mem_pestat] mean and std.dev: (206.74, 119.75)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 789)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (253, 332, 419)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 751)
[M::mem_pestat] mean and std.dev: (336.27, 130.24)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 917)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (43, 105, 220)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 574)
[M::mem_pestat] mean and std.dev: (133.48, 119.79)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 751)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (136, 207, 295)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 613)
[M::mem_pestat] mean and std.dev: (215.23, 115.52)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 772)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 1161496 reads in 464.841 CPU sec, 31.054 real sec
[M::process] 0 single-end sequences; 1161500 paired-end sequences
[M::process] read 1161462 sequences (160000021 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (10834, 459214, 6860, 8418)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (119, 193, 287)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 623)
[M::mem_pestat] mean and std.dev: (206.12, 120.34)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 791)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (253, 332, 420)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 754)
[M::mem_pestat] mean and std.dev: (336.52, 130.53)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 921)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (43, 104, 210)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 544)
[M::mem_pestat] mean and std.dev: (128.50, 113.50)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 711)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (135, 208, 297)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 621)
[M::mem_pestat] mean and std.dev: (216.18, 118.87)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 783)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 1161500 reads in 408.738 CPU sec, 25.434 real sec
[M::process] 0 single-end sequences; 1161462 paired-end sequences
[M::process] read 1161312 sequences (160000258 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (10847, 457675, 6646, 8650)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (117, 193, 287)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 627)
[M::mem_pestat] mean and std.dev: (204.77, 119.95)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 797)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (253, 331, 419)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 751)
[M::mem_pestat] mean and std.dev: (336.19, 130.38)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 917)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (44, 105, 211)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 545)
[M::mem_pestat] mean and std.dev: (129.61, 115.85)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 712)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (135, 211, 301)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 633)
[M::mem_pestat] mean and std.dev: (218.54, 121.24)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 799)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 1161462 reads in 410.146 CPU sec, 25.521 real sec
[M::process] 0 single-end sequences; 1161312 paired-end sequences
[M::process] read 1161366 sequences (160000039 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (11034, 455025, 6981, 9149)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (117, 193, 287)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 627)
[M::mem_pestat] mean and std.dev: (206.92, 122.62)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 797)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (253, 331, 419)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 751)
[M::mem_pestat] mean and std.dev: (335.95, 130.61)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 917)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (43, 103, 214)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 556)
[M::mem_pestat] mean and std.dev: (130.29, 116.70)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 727)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (133, 204, 295)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 619)
[M::mem_pestat] mean and std.dev: (215.11, 119.97)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 781)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 1161312 reads in 426.607 CPU sec, 26.656 real sec
[M::process] 0 single-end sequences; 1161366 paired-end sequences
[M::process] read 1161468 sequences (160000263 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (10771, 459405, 6778, 8788)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (118, 195, 284)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 616)
[M::mem_pestat] mean and std.dev: (204.76, 118.52)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 782)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (253, 332, 420)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 754)
[M::mem_pestat] mean and std.dev: (336.84, 130.97)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 921)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (44, 101, 205)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 527)
[M::mem_pestat] mean and std.dev: (125.71, 110.38)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 688)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (134, 206, 297)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 623)
[M::mem_pestat] mean and std.dev: (216.27, 120.79)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 786)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 1161366 reads in 401.764 CPU sec, 25.014 real sec
[M::process] 0 single-end sequences; 1161468 paired-end sequences
[M::process] read 1161284 sequences (160000265 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (10830, 459586, 6855, 8781)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (120, 195, 288)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 624)
[M::mem_pestat] mean and std.dev: (207.50, 120.64)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 792)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (253, 332, 420)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 754)
[M::mem_pestat] mean and std.dev: (336.44, 130.61)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 921)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (45, 103, 208)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 534)
[M::mem_pestat] mean and std.dev: (127.89, 113.56)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 697)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (135, 207, 293)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 609)
[M::mem_pestat] mean and std.dev: (215.32, 116.95)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 767)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 1161468 reads in 418.124 CPU sec, 26.031 real sec
[M::process] 0 single-end sequences; 1161284 paired-end sequences
[M::process] read 1161272 sequences (160000067 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (10811, 460467, 6739, 8751)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (118, 194, 287)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 625)
[M::mem_pestat] mean and std.dev: (205.49, 120.56)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 794)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (253, 332, 420)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 754)
[M::mem_pestat] mean and std.dev: (336.88, 130.79)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 921)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (43, 103, 202)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 520)
[M::mem_pestat] mean and std.dev: (124.44, 109.51)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 679)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (133, 204, 291)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 607)
[M::mem_pestat] mean and std.dev: (211.62, 117.01)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 765)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 1161284 reads in 399.862 CPU sec, 24.887 real sec
[M::process] 0 single-end sequences; 1161272 paired-end sequences
[M::process] read 1161132 sequences (160000170 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (10965, 458037, 7161, 8819)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (118, 192, 286)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 622)
[M::mem_pestat] mean and std.dev: (204.42, 119.87)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 790)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (254, 333, 420)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 752)
[M::mem_pestat] mean and std.dev: (337.37, 130.70)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 918)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (44, 106, 208)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 536)
[M::mem_pestat] mean and std.dev: (128.06, 111.75)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 700)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (136, 209, 297)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 619)
[M::mem_pestat] mean and std.dev: (215.73, 119.06)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 780)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 1161272 reads in 424.418 CPU sec, 26.440 real sec
[M::process] 0 single-end sequences; 1161132 paired-end sequences
[M::process] read 1161192 sequences (160000078 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (11054, 455163, 7146, 9335)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (115, 192, 285)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 625)
[M::mem_pestat] mean and std.dev: (203.68, 121.85)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 795)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (253, 332, 419)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 751)
[M::mem_pestat] mean and std.dev: (336.14, 130.50)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 917)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (43, 106, 211)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 547)
[M::mem_pestat] mean and std.dev: (129.04, 112.76)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 715)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (129, 202, 291)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 615)
[M::mem_pestat] mean and std.dev: (211.08, 119.31)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 777)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 1161132 reads in 444.056 CPU sec, 27.675 real sec
[M::process] 0 single-end sequences; 1161192 paired-end sequences
[M::process] read 1161152 sequences (160000118 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (11051, 457029, 7154, 8731)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (117, 194, 286)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 624)
[M::mem_pestat] mean and std.dev: (207.16, 122.47)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 793)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (254, 332, 420)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 752)
[M::mem_pestat] mean and std.dev: (337.05, 130.63)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 918)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (45, 105, 213)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 549)
[M::mem_pestat] mean and std.dev: (128.51, 114.00)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 717)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (135, 208, 301)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 633)
[M::mem_pestat] mean and std.dev: (217.66, 120.72)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 799)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 1161192 reads in 419.838 CPU sec, 26.117 real sec
[M::process] 0 single-end sequences; 1161152 paired-end sequences
[M::process] read 1161712 sequences (160000214 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (10969, 452323, 6870, 8980)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (121, 194, 286)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 616)
[M::mem_pestat] mean and std.dev: (205.29, 119.58)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 781)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (253, 332, 420)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 754)
[M::mem_pestat] mean and std.dev: (336.73, 130.94)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 921)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (45, 104, 210)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 540)
[M::mem_pestat] mean and std.dev: (127.75, 113.59)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 705)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (131, 206, 295)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 623)
[M::mem_pestat] mean and std.dev: (213.33, 118.88)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 787)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 1161152 reads in 473.591 CPU sec, 31.565 real sec
[M::process] 0 single-end sequences; 1161712 paired-end sequences
[M::process] read 1161518 sequences (160000034 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (10524, 456891, 6523, 8387)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (117, 190, 287)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 627)
[M::mem_pestat] mean and std.dev: (205.27, 121.13)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 797)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (254, 332, 420)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 752)
[M::mem_pestat] mean and std.dev: (337.00, 130.32)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 918)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (42, 104, 207)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 537)
[M::mem_pestat] mean and std.dev: (126.93, 113.11)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 702)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (134, 205, 292)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 608)
[M::mem_pestat] mean and std.dev: (213.88, 118.39)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 766)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 1161712 reads in 413.980 CPU sec, 25.799 real sec
[M::process] 0 single-end sequences; 1161518 paired-end sequences
[M::process] read 1161496 sequences (160000053 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (10730, 459470, 6477, 8443)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (119, 194, 287)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 623)
[M::mem_pestat] mean and std.dev: (206.25, 119.67)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 791)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (254, 332, 420)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 752)
[M::mem_pestat] mean and std.dev: (337.32, 130.62)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 918)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (43, 105, 215)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 559)
[M::mem_pestat] mean and std.dev: (130.85, 118.70)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 731)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (132, 204, 296)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 624)
[M::mem_pestat] mean and std.dev: (214.62, 120.43)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 788)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 1161518 reads in 405.085 CPU sec, 25.236 real sec
[M::process] 0 single-end sequences; 1161496 paired-end sequences
[M::process] read 1161504 sequences (160000200 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (10852, 455240, 6572, 9051)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (116, 194, 287)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 629)
[M::mem_pestat] mean and std.dev: (205.17, 120.31)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 800)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (253, 332, 420)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 754)
[M::mem_pestat] mean and std.dev: (336.42, 130.97)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 921)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (43, 99, 197)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 505)
[M::mem_pestat] mean and std.dev: (121.06, 106.06)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 659)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (133, 206, 295)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 619)
[M::mem_pestat] mean and std.dev: (213.57, 118.07)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 781)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 1161496 reads in 400.887 CPU sec, 24.952 real sec
[M::process] 0 single-end sequences; 1161504 paired-end sequences
[M::process] read 1161516 sequences (160000071 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (10773, 459857, 6545, 8456)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (118, 195, 290)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 634)
[M::mem_pestat] mean and std.dev: (207.34, 122.01)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 806)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (253, 332, 420)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 754)
[M::mem_pestat] mean and std.dev: (336.99, 131.17)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 921)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (44, 106, 209)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 539)
[M::mem_pestat] mean and std.dev: (128.17, 112.97)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 704)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (133, 206, 290)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 604)
[M::mem_pestat] mean and std.dev: (212.62, 116.21)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 761)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 1161504 reads in 400.896 CPU sec, 24.980 real sec
[M::process] 0 single-end sequences; 1161516 paired-end sequences
[M::process] read 1161346 sequences (160000226 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (10532, 458495, 6690, 8564)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (120, 194, 288)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 624)
[M::mem_pestat] mean and std.dev: (206.64, 122.09)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 792)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (254, 333, 421)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 755)
[M::mem_pestat] mean and std.dev: (337.57, 131.04)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 922)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (42, 100, 205)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 531)
[M::mem_pestat] mean and std.dev: (126.34, 112.32)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 694)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (131, 206, 295)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 623)
[M::mem_pestat] mean and std.dev: (213.60, 119.39)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 787)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 1161516 reads in 422.917 CPU sec, 26.418 real sec
[M::process] 0 single-end sequences; 1161346 paired-end sequences
[M::process] read 1161618 sequences (160000164 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (10618, 463210, 6714, 8507)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (120, 199, 295)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 645)
[M::mem_pestat] mean and std.dev: (209.97, 122.79)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 820)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (254, 333, 421)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 755)
[M::mem_pestat] mean and std.dev: (337.58, 130.42)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 922)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (43, 100, 206)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 532)
[M::mem_pestat] mean and std.dev: (125.93, 113.28)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 695)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (136, 209, 297)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 619)
[M::mem_pestat] mean and std.dev: (216.62, 119.11)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 780)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 1161346 reads in 394.849 CPU sec, 24.575 real sec
[M::process] 0 single-end sequences; 1161618 paired-end sequences
[M::process] read 1162776 sequences (160000092 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (10905, 457731, 6731, 8996)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (115, 190, 285)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 625)
[M::mem_pestat] mean and std.dev: (203.01, 121.67)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 795)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (252, 331, 418)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 750)
[M::mem_pestat] mean and std.dev: (335.35, 130.19)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 916)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (43, 102, 206)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 532)
[M::mem_pestat] mean and std.dev: (125.66, 111.50)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 695)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (132, 205, 296)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 624)
[M::mem_pestat] mean and std.dev: (214.62, 119.62)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 788)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 1161618 reads in 407.167 CPU sec, 25.318 real sec
[M::process] 0 single-end sequences; 1162776 paired-end sequences
[M::process] read 1161598 sequences (160000255 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (11026, 459717, 6791, 8712)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (118, 193, 286)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 622)
[M::mem_pestat] mean and std.dev: (204.70, 119.72)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 790)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (252, 331, 418)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 750)
[M::mem_pestat] mean and std.dev: (335.42, 130.13)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 916)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (41, 100, 207)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 539)
[M::mem_pestat] mean and std.dev: (127.03, 115.45)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 705)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (130, 202, 291)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 613)
[M::mem_pestat] mean and std.dev: (210.67, 117.09)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 774)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 1162776 reads in 402.427 CPU sec, 25.032 real sec
[M::process] 0 single-end sequences; 1161598 paired-end sequences
[M::process] read 1161648 sequences (160000115 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (10860, 454626, 6653, 8881)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (117, 193, 285)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 621)
[M::mem_pestat] mean and std.dev: (204.16, 120.32)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 789)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (252, 330, 418)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 750)
[M::mem_pestat] mean and std.dev: (335.17, 130.47)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 916)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (45, 104, 210)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 540)
[M::mem_pestat] mean and std.dev: (128.21, 113.71)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 705)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (131, 207, 296)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 626)
[M::mem_pestat] mean and std.dev: (214.71, 120.93)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 791)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 1161598 reads in 422.971 CPU sec, 26.366 real sec
[M::process] 0 single-end sequences; 1161648 paired-end sequences
[M::process] read 1161466 sequences (160000092 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (10808, 455190, 6754, 8678)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (117, 193, 286)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 624)
[M::mem_pestat] mean and std.dev: (204.28, 119.49)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 793)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (252, 331, 418)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 750)
[M::mem_pestat] mean and std.dev: (335.31, 130.41)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 916)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (43, 106, 211)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 547)
[M::mem_pestat] mean and std.dev: (130.52, 115.85)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 715)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (132, 204, 294)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 618)
[M::mem_pestat] mean and std.dev: (213.20, 119.04)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 780)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 1161648 reads in 478.526 CPU sec, 32.059 real sec
[M::process] 0 single-end sequences; 1161466 paired-end sequences
[M::process] read 1161568 sequences (160000136 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (10678, 457413, 6646, 8548)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (118, 191, 285)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 619)
[M::mem_pestat] mean and std.dev: (204.24, 119.05)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 786)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (253, 332, 419)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 751)
[M::mem_pestat] mean and std.dev: (336.29, 130.33)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 917)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (44, 105, 212)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 548)
[M::mem_pestat] mean and std.dev: (129.94, 114.43)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 716)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (135, 207, 296)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 618)
[M::mem_pestat] mean and std.dev: (215.69, 118.06)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 779)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 1161466 reads in 410.917 CPU sec, 25.584 real sec
[M::process] 0 single-end sequences; 1161568 paired-end sequences
[M::process] read 1161658 sequences (160000073 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (10854, 456089, 7070, 8382)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (118, 195, 287)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 625)
[M::mem_pestat] mean and std.dev: (206.13, 119.59)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 794)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (253, 332, 420)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 754)
[M::mem_pestat] mean and std.dev: (336.54, 130.63)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 921)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (44, 101, 208)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 536)
[M::mem_pestat] mean and std.dev: (126.81, 113.23)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 700)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (134, 206, 298)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 626)
[M::mem_pestat] mean and std.dev: (215.66, 119.86)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 790)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 1161568 reads in 438.789 CPU sec, 27.297 real sec
[M::process] 0 single-end sequences; 1161658 paired-end sequences
[M::process] read 1161394 sequences (160000050 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (11101, 456634, 6784, 8966)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (115, 189, 286)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 628)
[M::mem_pestat] mean and std.dev: (203.05, 121.81)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 799)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (252, 331, 419)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 753)
[M::mem_pestat] mean and std.dev: (335.74, 130.77)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 920)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (44, 103, 205)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 527)
[M::mem_pestat] mean and std.dev: (124.76, 109.39)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 688)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (137, 205, 294)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 608)
[M::mem_pestat] mean and std.dev: (214.24, 116.49)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 765)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 1161658 reads in 405.375 CPU sec, 25.274 real sec
[M::process] 0 single-end sequences; 1161394 paired-end sequences
[M::process] read 1161572 sequences (160000134 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (11017, 455296, 6874, 8998)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (117, 193, 288)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 630)
[M::mem_pestat] mean and std.dev: (204.10, 119.94)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 801)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (252, 332, 419)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 753)
[M::mem_pestat] mean and std.dev: (336.17, 130.77)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 920)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (43, 106, 214)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 556)
[M::mem_pestat] mean and std.dev: (130.07, 114.90)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 727)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (131, 206, 294)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 620)
[M::mem_pestat] mean and std.dev: (213.61, 118.37)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 783)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 1161394 reads in 440.999 CPU sec, 27.478 real sec
[M::process] 0 single-end sequences; 1161572 paired-end sequences
[M::process] read 1161664 sequences (160000121 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (10847, 459243, 6757, 8687)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (117, 196, 288)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 630)
[M::mem_pestat] mean and std.dev: (206.55, 121.51)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 801)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (253, 332, 419)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 751)
[M::mem_pestat] mean and std.dev: (336.36, 130.69)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 917)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (42, 102, 207)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 537)
[M::mem_pestat] mean and std.dev: (125.49, 110.69)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 702)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (131, 206, 296)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 626)
[M::mem_pestat] mean and std.dev: (214.46, 120.51)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 791)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 1161572 reads in 411.058 CPU sec, 25.637 real sec
[M::process] 0 single-end sequences; 1161664 paired-end sequences
[M::process] read 1161704 sequences (160000028 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (10891, 457409, 6959, 8974)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (116, 188, 284)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 620)
[M::mem_pestat] mean and std.dev: (202.81, 120.57)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 788)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (252, 330, 418)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 750)
[M::mem_pestat] mean and std.dev: (334.89, 130.43)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 916)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (41, 97, 205)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 533)
[M::mem_pestat] mean and std.dev: (124.04, 112.97)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 697)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (131, 202, 289)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 605)
[M::mem_pestat] mean and std.dev: (210.45, 116.57)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 763)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 1161664 reads in 424.805 CPU sec, 26.424 real sec
[M::process] 0 single-end sequences; 1161704 paired-end sequences
[M::process] read 1161694 sequences (160000106 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (10714, 454353, 6623, 8462)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (117, 194, 287)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 627)
[M::mem_pestat] mean and std.dev: (204.87, 120.26)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 797)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (252, 331, 418)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 750)
[M::mem_pestat] mean and std.dev: (335.51, 130.46)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 916)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (44, 106, 209)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 539)
[M::mem_pestat] mean and std.dev: (130.02, 115.00)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 704)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (132, 205, 291)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 609)
[M::mem_pestat] mean and std.dev: (212.78, 118.57)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 768)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 1161704 reads in 399.803 CPU sec, 24.890 real sec
[M::process] 0 single-end sequences; 1161694 paired-end sequences
[M::process] read 1161288 sequences (160000062 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (11062, 454801, 6768, 8915)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (117, 191, 283)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 615)
[M::mem_pestat] mean and std.dev: (202.88, 117.95)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 781)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (252, 331, 418)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 750)
[M::mem_pestat] mean and std.dev: (335.01, 130.36)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 916)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (43, 101, 203)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 523)
[M::mem_pestat] mean and std.dev: (124.16, 110.36)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 683)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (130, 204, 290)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 610)
[M::mem_pestat] mean and std.dev: (210.93, 117.51)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 770)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 1161694 reads in 419.074 CPU sec, 26.155 real sec
[M::process] 0 single-end sequences; 1161288 paired-end sequences
[M::process] read 1161510 sequences (160000192 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (11113, 462820, 6839, 8611)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (120, 197, 285)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 615)
[M::mem_pestat] mean and std.dev: (207.05, 119.50)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 780)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (253, 332, 420)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 754)
[M::mem_pestat] mean and std.dev: (336.78, 130.52)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 921)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (42, 104, 211)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 549)
[M::mem_pestat] mean and std.dev: (127.50, 114.16)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 718)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (133, 205, 290)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 604)
[M::mem_pestat] mean and std.dev: (212.39, 115.97)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 761)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 1161288 reads in 393.327 CPU sec, 24.403 real sec
[M::process] 0 single-end sequences; 1161510 paired-end sequences
[M::process] read 1161448 sequences (160000196 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (10655, 458972, 6727, 8846)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (117, 191, 284)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 618)
[M::mem_pestat] mean and std.dev: (203.06, 118.50)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 785)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (253, 332, 419)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 751)
[M::mem_pestat] mean and std.dev: (336.24, 130.64)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 917)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (45, 104, 216)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 558)
[M::mem_pestat] mean and std.dev: (130.10, 117.50)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 729)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (133, 206, 296)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 622)
[M::mem_pestat] mean and std.dev: (214.68, 119.23)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 785)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 1161510 reads in 449.144 CPU sec, 30.947 real sec
[M::process] 0 single-end sequences; 1161448 paired-end sequences
[M::process] read 1161412 sequences (160000102 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (10623, 459091, 6566, 8505)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (116, 193, 282)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 614)
[M::mem_pestat] mean and std.dev: (202.83, 118.19)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 780)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (253, 332, 419)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 751)
[M::mem_pestat] mean and std.dev: (336.38, 130.38)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 917)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (43, 102, 210)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 544)
[M::mem_pestat] mean and std.dev: (126.94, 113.22)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 711)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (130, 202, 293)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 619)
[M::mem_pestat] mean and std.dev: (211.28, 118.47)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 782)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 1161448 reads in 420.134 CPU sec, 26.243 real sec
[M::process] 0 single-end sequences; 1161412 paired-end sequences
[M::process] read 1161370 sequences (160000144 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (10992, 456012, 6862, 9057)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (117, 189, 281)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 609)
[M::mem_pestat] mean and std.dev: (201.22, 118.02)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 773)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (252, 330, 418)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 750)
[M::mem_pestat] mean and std.dev: (334.92, 130.55)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 916)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (45, 107, 209)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 537)
[M::mem_pestat] mean and std.dev: (128.58, 111.01)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 701)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (129, 201, 294)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 624)
[M::mem_pestat] mean and std.dev: (211.42, 119.35)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 789)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 1161412 reads in 435.129 CPU sec, 27.178 real sec
[M::process] 0 single-end sequences; 1161370 paired-end sequences
[M::process] read 1161552 sequences (160000038 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (10801, 456356, 6873, 8892)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (117, 195, 287)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 627)
[M::mem_pestat] mean and std.dev: (205.11, 120.74)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 797)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (252, 332, 419)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 753)
[M::mem_pestat] mean and std.dev: (336.07, 130.91)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 920)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (42, 101, 210)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 546)
[M::mem_pestat] mean and std.dev: (126.49, 114.27)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 714)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (133, 205, 295)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 619)
[M::mem_pestat] mean and std.dev: (213.23, 119.34)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 781)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 1161370 reads in 420.707 CPU sec, 26.192 real sec
[M::process] 0 single-end sequences; 1161552 paired-end sequences
[M::process] read 1161546 sequences (160000084 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (10910, 456702, 7012, 8778)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (115, 190, 279)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 607)
[M::mem_pestat] mean and std.dev: (202.32, 118.82)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 771)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (253, 332, 420)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 754)
[M::mem_pestat] mean and std.dev: (336.54, 130.65)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 921)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (44, 102, 206)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 530)
[M::mem_pestat] mean and std.dev: (127.12, 113.32)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 692)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (135, 207, 298)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 624)
[M::mem_pestat] mean and std.dev: (215.45, 119.77)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 787)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 1161552 reads in 413.887 CPU sec, 25.798 real sec
[M::process] 0 single-end sequences; 1161546 paired-end sequences
[M::process] read 1161616 sequences (160000171 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (10485, 455202, 6552, 8266)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (118, 194, 287)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 625)
[M::mem_pestat] mean and std.dev: (205.47, 120.64)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 794)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (253, 332, 419)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 751)
[M::mem_pestat] mean and std.dev: (336.34, 130.11)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 917)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (42, 99, 200)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 516)
[M::mem_pestat] mean and std.dev: (122.11, 107.95)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 674)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (133, 203, 292)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 610)
[M::mem_pestat] mean and std.dev: (212.50, 118.69)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 769)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 1161546 reads in 427.805 CPU sec, 26.722 real sec
[M::process] 0 single-end sequences; 1161616 paired-end sequences
[M::process] read 1161580 sequences (160000223 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (10452, 456742, 6664, 8460)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (121, 196, 287)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 619)
[M::mem_pestat] mean and std.dev: (206.32, 117.36)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 785)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (253, 332, 420)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 754)
[M::mem_pestat] mean and std.dev: (336.65, 130.79)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 921)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (43, 101, 199)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 511)
[M::mem_pestat] mean and std.dev: (121.47, 105.17)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 667)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (132, 205, 294)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 618)
[M::mem_pestat] mean and std.dev: (212.86, 119.09)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 780)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 1161616 reads in 425.253 CPU sec, 26.535 real sec
[M::process] 0 single-end sequences; 1161580 paired-end sequences
[M::process] read 1161560 sequences (160000033 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (11100, 465120, 6624, 8699)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (117, 195, 284)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 618)
[M::mem_pestat] mean and std.dev: (204.58, 118.33)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 785)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (252, 331, 418)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 750)
[M::mem_pestat] mean and std.dev: (335.36, 130.34)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 916)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (43, 101, 207)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 535)
[M::mem_pestat] mean and std.dev: (126.40, 112.87)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 699)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (132, 204, 292)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 612)
[M::mem_pestat] mean and std.dev: (212.65, 118.83)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 772)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 1161580 reads in 396.057 CPU sec, 24.668 real sec
[M::process] 0 single-end sequences; 1161560 paired-end sequences
[M::process] read 1161626 sequences (160000195 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (10643, 459923, 6666, 8663)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (122, 196, 288)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 620)
[M::mem_pestat] mean and std.dev: (208.46, 119.43)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 786)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (253, 331, 419)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 751)
[M::mem_pestat] mean and std.dev: (335.89, 130.22)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 917)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (42, 99, 202)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 522)
[M::mem_pestat] mean and std.dev: (121.69, 108.18)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 682)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (135, 209, 296)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 618)
[M::mem_pestat] mean and std.dev: (215.30, 118.34)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 779)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 1161560 reads in 421.196 CPU sec, 26.211 real sec
[M::process] 0 single-end sequences; 1161626 paired-end sequences
[M::process] read 1161708 sequences (160000064 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (10659, 460147, 6547, 8736)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (118, 192, 288)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 628)
[M::mem_pestat] mean and std.dev: (206.85, 121.74)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 798)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (253, 331, 419)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 751)
[M::mem_pestat] mean and std.dev: (335.93, 130.59)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 917)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (44, 104, 207)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 533)
[M::mem_pestat] mean and std.dev: (126.43, 110.48)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 696)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (133, 206, 291)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 607)
[M::mem_pestat] mean and std.dev: (212.17, 116.85)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 765)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 1161626 reads in 413.659 CPU sec, 25.895 real sec
[M::process] 0 single-end sequences; 1161708 paired-end sequences
[M::process] read 1161546 sequences (160000232 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (10516, 465118, 6777, 8331)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (116, 192, 281)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 611)
[M::mem_pestat] mean and std.dev: (201.64, 117.89)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 776)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (253, 331, 418)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 748)
[M::mem_pestat] mean and std.dev: (335.63, 129.70)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 913)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (42, 101, 209)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 543)
[M::mem_pestat] mean and std.dev: (126.49, 113.14)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 710)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (133, 202, 296)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 622)
[M::mem_pestat] mean and std.dev: (213.49, 120.25)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 785)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 1161708 reads in 444.345 CPU sec, 31.227 real sec
[M::process] 0 single-end sequences; 1161546 paired-end sequences
[M::process] read 1161408 sequences (160000251 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (10674, 459600, 6785, 8110)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (118, 192, 284)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 616)
[M::mem_pestat] mean and std.dev: (203.75, 118.83)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 782)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (253, 332, 420)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 754)
[M::mem_pestat] mean and std.dev: (336.82, 131.00)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 921)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (44, 104, 216)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 560)
[M::mem_pestat] mean and std.dev: (129.80, 116.98)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 732)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (132, 204, 291)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 609)
[M::mem_pestat] mean and std.dev: (212.54, 118.31)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 768)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 1161546 reads in 416.948 CPU sec, 25.923 real sec
[M::process] 0 single-end sequences; 1161408 paired-end sequences
[M::process] read 1161650 sequences (160000105 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (10695, 460550, 6847, 8794)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (118, 197, 287)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 625)
[M::mem_pestat] mean and std.dev: (207.33, 120.67)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 794)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (252, 331, 418)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 750)
[M::mem_pestat] mean and std.dev: (335.67, 130.13)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 916)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (42, 98, 201)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 519)
[M::mem_pestat] mean and std.dev: (123.45, 108.75)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 678)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (135, 210, 296)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 618)
[M::mem_pestat] mean and std.dev: (217.09, 118.16)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 779)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 1161408 reads in 420.220 CPU sec, 26.127 real sec
[M::process] 0 single-end sequences; 1161650 paired-end sequences
[M::process] read 1161350 sequences (160000149 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (10693, 458372, 6552, 8898)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (118, 193, 286)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 622)
[M::mem_pestat] mean and std.dev: (205.43, 120.23)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 790)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (253, 332, 420)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 754)
[M::mem_pestat] mean and std.dev: (336.57, 130.76)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 921)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (44, 103, 209)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 539)
[M::mem_pestat] mean and std.dev: (127.58, 112.74)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 704)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (137, 207, 294)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 608)
[M::mem_pestat] mean and std.dev: (216.14, 118.84)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 765)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 1161650 reads in 433.651 CPU sec, 27.045 real sec
[M::process] 0 single-end sequences; 1161350 paired-end sequences
[M::process] read 1161726 sequences (160000165 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (10696, 456403, 6992, 9149)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (119, 192, 281)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 605)
[M::mem_pestat] mean and std.dev: (202.94, 117.34)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 767)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (253, 331, 419)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 751)
[M::mem_pestat] mean and std.dev: (335.91, 130.70)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 917)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (44, 101, 201)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 515)
[M::mem_pestat] mean and std.dev: (125.25, 110.78)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 672)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (134, 206, 296)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 620)
[M::mem_pestat] mean and std.dev: (215.08, 120.36)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 782)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 1161350 reads in 451.398 CPU sec, 28.142 real sec
[M::process] 0 single-end sequences; 1161726 paired-end sequences
[M::process] read 1161532 sequences (160000222 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (10818, 458470, 6702, 8828)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (113, 186, 280)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 614)
[M::mem_pestat] mean and std.dev: (199.94, 118.14)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 781)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (252, 332, 419)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 753)
[M::mem_pestat] mean and std.dev: (335.95, 131.18)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 920)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (41, 98, 202)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 524)
[M::mem_pestat] mean and std.dev: (123.94, 112.58)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 685)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (133, 202, 291)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 607)
[M::mem_pestat] mean and std.dev: (212.43, 116.61)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 765)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 1161726 reads in 418.077 CPU sec, 26.038 real sec
[M::process] 0 single-end sequences; 1161532 paired-end sequences
[M::process] read 1161602 sequences (160000082 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (10673, 463407, 6622, 8628)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (121, 196, 283)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 607)
[M::mem_pestat] mean and std.dev: (207.30, 118.42)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 769)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (252, 331, 418)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 750)
[M::mem_pestat] mean and std.dev: (335.28, 130.15)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 916)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (42, 105, 212)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 552)
[M::mem_pestat] mean and std.dev: (130.44, 117.83)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 722)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (134, 204, 294)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 614)
[M::mem_pestat] mean and std.dev: (213.26, 117.89)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 774)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 1161532 reads in 408.999 CPU sec, 25.415 real sec
[M::process] 0 single-end sequences; 1161602 paired-end sequences
[M::process] read 1161612 sequences (160000209 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (10892, 460215, 6782, 8744)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (117, 193, 285)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 621)
[M::mem_pestat] mean and std.dev: (204.39, 119.54)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 789)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (253, 331, 420)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 754)
[M::mem_pestat] mean and std.dev: (336.23, 130.71)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 921)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (44, 105, 207)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 533)
[M::mem_pestat] mean and std.dev: (127.55, 112.18)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 696)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (133, 207, 294)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 616)
[M::mem_pestat] mean and std.dev: (213.61, 117.90)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 777)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 1161602 reads in 432.256 CPU sec, 26.953 real sec
[M::process] 0 single-end sequences; 1161612 paired-end sequences
[M::process] read 1161512 sequences (160000106 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (10849, 459705, 6959, 8801)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (118, 193, 284)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 616)
[M::mem_pestat] mean and std.dev: (204.41, 118.55)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 782)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (252, 332, 419)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 753)
[M::mem_pestat] mean and std.dev: (336.31, 131.04)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 920)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (42, 105, 210)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 546)
[M::mem_pestat] mean and std.dev: (128.79, 115.42)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 714)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (131, 202, 288)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 602)
[M::mem_pestat] mean and std.dev: (210.15, 116.05)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 759)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 1161612 reads in 424.734 CPU sec, 26.433 real sec
[M::process] 0 single-end sequences; 1161512 paired-end sequences
[M::process] read 1161484 sequences (160000257 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (10733, 453437, 6707, 8611)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (118, 194, 286)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 622)
[M::mem_pestat] mean and std.dev: (204.58, 117.81)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 790)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (253, 331, 420)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 754)
[M::mem_pestat] mean and std.dev: (336.32, 130.83)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 921)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (40, 100, 208)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 544)
[M::mem_pestat] mean and std.dev: (126.29, 114.18)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 712)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (136, 204, 292)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 604)
[M::mem_pestat] mean and std.dev: (212.75, 115.53)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 760)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 1161512 reads in 446.568 CPU sec, 29.170 real sec
[M::process] 0 single-end sequences; 1161484 paired-end sequences
[M::process] read 1161396 sequences (160000235 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (10903, 457413, 6770, 8657)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (119, 196, 285)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 617)
[M::mem_pestat] mean and std.dev: (205.35, 118.85)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 783)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (253, 332, 420)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 754)
[M::mem_pestat] mean and std.dev: (336.67, 131.17)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 921)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (42, 98, 209)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 543)
[M::mem_pestat] mean and std.dev: (127.14, 114.81)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 710)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (133, 204, 290)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 604)
[M::mem_pestat] mean and std.dev: (212.37, 117.23)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 761)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 1161484 reads in 395.716 CPU sec, 24.604 real sec
[M::process] 0 single-end sequences; 1161396 paired-end sequences
[M::process] read 1161822 sequences (160000001 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (10728, 458424, 6723, 8650)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (117, 193, 285)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 621)
[M::mem_pestat] mean and std.dev: (204.80, 120.25)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 789)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (252, 331, 419)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 753)
[M::mem_pestat] mean and std.dev: (335.78, 130.63)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 920)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (45, 101, 204)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 522)
[M::mem_pestat] mean and std.dev: (125.24, 108.90)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 681)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (132, 205, 290)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 606)
[M::mem_pestat] mean and std.dev: (212.43, 117.02)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 764)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 1161396 reads in 405.899 CPU sec, 25.287 real sec
[M::process] 0 single-end sequences; 1161822 paired-end sequences
[M::process] read 1161764 sequences (160000218 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (10665, 459131, 6359, 8413)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (116, 192, 282)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 614)
[M::mem_pestat] mean and std.dev: (203.47, 119.66)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 780)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (253, 332, 419)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 751)
[M::mem_pestat] mean and std.dev: (336.31, 130.58)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 917)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (43, 103, 206)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 532)
[M::mem_pestat] mean and std.dev: (125.81, 112.48)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 695)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (134, 206, 295)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 617)
[M::mem_pestat] mean and std.dev: (215.93, 118.53)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 778)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 1161822 reads in 397.766 CPU sec, 24.773 real sec
[M::process] 0 single-end sequences; 1161764 paired-end sequences
[M::process] read 1161424 sequences (160000168 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (10574, 459999, 6452, 8466)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (119, 196, 289)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 629)
[M::mem_pestat] mean and std.dev: (205.90, 119.38)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 799)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (252, 331, 418)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 750)
[M::mem_pestat] mean and std.dev: (335.61, 130.37)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 916)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (43, 101, 203)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 523)
[M::mem_pestat] mean and std.dev: (125.03, 110.39)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 683)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (134, 208, 297)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 623)
[M::mem_pestat] mean and std.dev: (215.96, 119.36)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 786)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 1161764 reads in 395.029 CPU sec, 24.543 real sec
[M::process] 0 single-end sequences; 1161424 paired-end sequences
[M::process] read 1161930 sequences (160000231 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (10827, 459534, 6905, 8869)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (117, 193, 282)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 612)
[M::mem_pestat] mean and std.dev: (202.63, 118.14)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 777)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (252, 331, 419)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 753)
[M::mem_pestat] mean and std.dev: (336.00, 130.65)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 920)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (44, 105, 207)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 533)
[M::mem_pestat] mean and std.dev: (127.64, 112.44)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 696)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (135, 204, 289)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 597)
[M::mem_pestat] mean and std.dev: (211.36, 114.39)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 751)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 1161424 reads in 399.929 CPU sec, 24.897 real sec
[M::process] 0 single-end sequences; 1161930 paired-end sequences
[M::process] read 67006 sequences (9218708 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (10427, 457587, 6593, 8352)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (119, 192, 282)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 608)
[M::mem_pestat] mean and std.dev: (203.83, 117.93)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 771)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (252, 331, 419)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 753)
[M::mem_pestat] mean and std.dev: (335.93, 130.67)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 920)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (44, 107, 215)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 557)
[M::mem_pestat] mean and std.dev: (130.38, 116.82)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 728)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (132, 204, 297)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 627)
[M::mem_pestat] mean and std.dev: (215.17, 120.63)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 792)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 1161930 reads in 424.375 CPU sec, 26.578 real sec
[M::process] 0 single-end sequences; 67006 paired-end sequences
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (617, 25448, 424, 572)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (110, 186, 253)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 539)
[M::mem_pestat] mean and std.dev: (186.21, 106.11)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 682)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (248, 328, 418)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 758)
[M::mem_pestat] mean and std.dev: (333.53, 132.25)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 928)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (42, 89, 194)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 498)
[M::mem_pestat] mean and std.dev: (115.57, 100.93)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 650)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (119, 190, 282)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 608)
[M::mem_pestat] mean and std.dev: (204.70, 119.97)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 771)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 67006 reads in 33.076 CPU sec, 2.135 real sec
[main] Version: 0.7.17-r1188
[main] CMD: bwa mem -t16 -pC fly/fly.fa f1chr2R.fq.gz
[main] Real time: 2151.641 sec; CPU: 33779.679 sec
samtools sort -@16 -tBX -T$(mktemp -u -t fly.f1chr2R.sortbx.bam.XXXXXX) -o fly/fly.f1chr2R.sortbx.bam fly/fly.f1chr2R.sortn.bam
[bam_sort_core] merging from 32 files and 16 in-memory blocks...
tigmint-molecule -a0.65 -n5 -q1 -d50000 -s2000 -o fly/fly.f1chr2R.a0.65.d50000.n5.q1.s2000.molecule.bed fly/fly.f1chr2R.sortbx.bam
command gtime -v -o f1chr2R.indexlr.n100-1000.c2-x.physlr.overlap.n30.mol.backbone.path.time env PYTHONPATH=.. pypy3 ../bin/physlr backbone f1chr2R.indexlr.n100-1000.c2-x.physlr.overlap.n30.mol.backbone.tsv >f1chr2R.indexlr.n100-1000.c2-x.physlr.overlap.n30.mol.backbone.path
0 Reading f1chr2R.indexlr.n100-1000.c2-x.physlr.overlap.n30.mol.backbone.tsv
 0.0% 00:00 ETA ?           100.0% 00:00 ETA 00:00 ██████████
0 Read f1chr2R.indexlr.n100-1000.c2-x.physlr.overlap.n30.mol.backbone.tsv
1 Determined the backbone paths
env PYTHONPATH=.. pypy3 ../bin/physlr filter-bed --min-component-size=50 fly/fly.f1chr2R.a0.65.d50000.n5.q1.s2000.molecule.bed f1chr2R.indexlr.n100-1000.c2-x.physlr.overlap.n30.mol.backbone.path >f1chr2R.indexlr.n100-1000.c2-x.physlr.overlap.n30.mol.backbone.path.fly.molecule.bed
0 Reading fly/fly.f1chr2R.a0.65.d50000.n5.q1.s2000.molecule.bed
 0.0% 00:00 ETA ?           100.0% 00:00 ETA 00:00 ██████████
0 Read fly/fly.f1chr2R.a0.65.d50000.n5.q1.s2000.molecule.bed
 0.0% 00:00 ETA ?           100.0% 00:00 ETA 00:00 ██████████
1 Indexed 271746 barcodes in 311365 BED records
1 Reading f1chr2R.indexlr.n100-1000.c2-x.physlr.overlap.n30.mol.backbone.path
 0.0% 00:00 ETA ?           100.0% 00:00 ETA 00:00 ██████████
1 Read f1chr2R.indexlr.n100-1000.c2-x.physlr.overlap.n30.mol.backbone.path
 0.0% 00:00 ETA ?           100.0% 00:00 ETA 00:00 ██████████
1 Skipped 80 paths shorter than 50 vertices
1 Missing 5 barcodes of 3974 (0.13%)
1 Wrote 4058 BED records in 3974 barcodes in 6 paths
Rscript -e 'rmarkdown::render("plotbed.rmd", "html_document", "f1chr2R.indexlr.n100-1000.c2-x.physlr.overlap.n30.mol.backbone.path.fly.molecule.plotbed.html", params = list(input_bed="f1chr2R.indexlr.n100-1000.c2-x.physlr.overlap.n30.mol.backbone.path.fly.molecule.bed"))'


processing file: plotbed.rmd
  |                                                                         |                                                                 |   0%  |                                                                         |........                                                         |  12%
  ordinary text without R code

  |                                                                         |................                                                 |  25%
label: setup (with options) 
List of 1
 $ message: logi FALSE


Attaching package: 'dplyr'

The following objects are masked from 'package:stats':

    filter, lag

The following objects are masked from 'package:base':

    intersect, setdiff, setequal, union


Attaching package: 'scales'

The following object is masked from 'package:readr':

    col_factor

  |                                                                         |........................                                         |  38%
  ordinary text without R code

  |                                                                         |................................                                 |  50%
label: read-data
  |                                                                         |.........................................                        |  62%
  ordinary text without R code

  |                                                                         |.................................................                |  75%
label: plot-bed (with options) 
List of 2
 $ fig.height: num 6
 $ fig.width : num 6

  |                                                                         |.........................................................        |  88%
  ordinary text without R code

  |                                                                         |.................................................................| 100%
label: save-plot

output file: plotbed.knit.md

/usr/bin/pandoc +RTS -K512m -RTS plotbed.utf8.md --to html4 --from markdown+autolink_bare_uris+ascii_identifiers+tex_math_single_backslash --output f1chr2R.indexlr.n100-1000.c2-x.physlr.overlap.n30.mol.backbone.path.fly.molecule.plotbed.html --smart --email-obfuscation none --self-contained --standalone --section-divs --template /gsc/btl/linuxbrew/lib/R/3.5/site-library/rmarkdown/rmd/h/default.html --no-highlight --variable highlightjs=1 --variable 'theme:bootstrap' --include-in-header /var/tmp/RtmpvcMBsw/rmarkdown-str177f25f447848.html --mathjax --variable 'mathjax-url:https://mathjax.rstudio.com/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML' 

Output created: f1chr2R.indexlr.n100-1000.c2-x.physlr.overlap.n30.mol.backbone.path.fly.molecule.plotbed.html
Warning message:
In grDevices::png(f) : unable to open connection to X11 display ''
command gtime -v -o f1chr2R.indexlr.n100-1000.c2-x.physlr.overlap.n30.mol.backbone.map.fly.n10.paf.gz.time env PYTHONPATH=.. pypy3 ../bin/physlr map-paf -n10 f1chr2R.indexlr.n100-1000.c2-x.physlr.overlap.n30.mol.backbone.tsv f1chr2R.indexlr.n100-1000.c2-x.physlr.tsv fly/fly.indexlr.physlr.tsv | pigz -p16 >f1chr2R.indexlr.n100-1000.c2-x.physlr.overlap.n30.mol.backbone.map.fly.n10.paf.gz
0 Reading f1chr2R.indexlr.n100-1000.c2-x.physlr.overlap.n30.mol.backbone.tsv
 0.0% 00:00 ETA ?           100.0% 00:00 ETA 00:00 ██████████
0 Read f1chr2R.indexlr.n100-1000.c2-x.physlr.overlap.n30.mol.backbone.tsv
0 Reading f1chr2R.indexlr.n100-1000.c2-x.physlr.tsv
 0.0% 00:00 ETA ?            2.3% 00:01 ETA 00:42 ▏          4.8% 00:02 ETA 00:40 ▍          7.1% 00:03 ETA 00:39 ▋          9.7% 00:04 ETA 00:38 ▉         12.1% 00:05 ETA 00:37 █▏        14.6% 00:06 ETA 00:35 █▍        17.0% 00:07 ETA 00:35 █▋        19.5% 00:08 ETA 00:33 █▉        22.1% 00:09 ETA 00:32 ██▏       24.7% 00:10 ETA 00:31 ██▍       26.9% 00:11 ETA 00:30 ██▋       29.5% 00:12 ETA 00:29 ██▉       32.1% 00:13 ETA 00:27 ███▏      34.7% 00:14 ETA 00:26 ███▍      37.3% 00:15 ETA 00:25 ███▋      39.5% 00:16 ETA 00:24 ███▉      42.2% 00:17 ETA 00:23 ████▏     44.7% 00:18 ETA 00:22 ████▍     47.3% 00:19 ETA 00:21 ████▋     49.8% 00:20 ETA 00:20 ████▉     52.4% 00:21 ETA 00:19 █████▏    54.7% 00:22 ETA 00:18 █████▍    57.2% 00:23 ETA 00:17 █████▋    59.8% 00:24 ETA 00:16 █████▉    62.4% 00:25 ETA 00:15 ██████▏   64.9% 00:26 ETA 00:14 ██████▍   67.5% 00:27 ETA 00:12 ██████▋   70.0% 00:28 ETA 00:11 ███████   72.6% 00:29 ETA 00:10 ███████▎  75.2% 00:30 ETA 00:09 ███████▌  77.8% 00:31 ETA 00:08 ███████▊  80.2% 00:32 ETA 00:07 ████████  82.9% 00:33 ETA 00:06 ████████▎ 85.6% 00:34 ETA 00:05 ████████▌ 88.1% 00:35 ETA 00:04 ████████▊ 90.7% 00:36 ETA 00:03 █████████ 93.3% 00:37 ETA 00:02 █████████▎95.8% 00:38 ETA 00:01 █████████▌98.3% 00:39 ETA 00:00 █████████▊100.0% 00:39 ETA 00:00 ██████████
39 Read f1chr2R.indexlr.n100-1000.c2-x.physlr.tsv
39 Reading fly/fly.indexlr.physlr.tsv
 0.0% 00:00 ETA ?           34.3% 00:01 ETA 00:03 ███▍      52.7% 00:03 ETA 00:02 █████▎    73.1% 00:04 ETA 00:01 ███████▎  96.5% 00:05 ETA 00:00 █████████▋100.0% 00:07 ETA 00:00 ██████████
47 Read fly/fly.indexlr.physlr.tsv
48 Determined the backbone paths
 0.0% 00:00 ETA ?            1.2% 00:01 ETA 01:52            4.7% 00:02 ETA 01:40 ▍         100.0% 00:02 ETA 00:00 ██████████
50 Indexed 1413878 minimizers
 0.0% 00:00 ETA ?           25.0% 00:01 ETA 00:03 ██▌       37.5% 00:04 ETA 00:04 ███▊      62.5% 00:05 ETA 00:02 ██████▎   100.0% 00:05 ETA 00:00 ██████████
56 Mapped 7 sequences of 8 (87.5%)
Rscript -e 'rmarkdown::render("plotpaf.rmd", "html_document", "f1chr2R.indexlr.n100-1000.c2-x.physlr.overlap.n30.mol.backbone.map.fly.n10.plotpaf.html", params = list(input_paf="f1chr2R.indexlr.n100-1000.c2-x.physlr.overlap.n30.mol.backbone.map.fly.n10.paf.gz"))'


processing file: plotpaf.rmd
  |                                                                         |                                                                 |   0%  |                                                                         |........                                                         |  12%
  ordinary text without R code

  |                                                                         |................                                                 |  25%
label: setup (with options) 
List of 1
 $ message: logi FALSE


Attaching package: 'dplyr'

The following objects are masked from 'package:stats':

    filter, lag

The following objects are masked from 'package:base':

    intersect, setdiff, setequal, union


Attaching package: 'scales'

The following object is masked from 'package:readr':

    col_factor

  |                                                                         |........................                                         |  38%
  ordinary text without R code

  |                                                                         |................................                                 |  50%
label: read-data
  |                                                                         |.........................................                        |  62%
  ordinary text without R code

  |                                                                         |.................................................                |  75%
label: plot-paf (with options) 
List of 2
 $ fig.height: num 6
 $ fig.width : num 6

  |                                                                         |.........................................................        |  88%
  ordinary text without R code

  |                                                                         |.................................................................| 100%
label: save-plot

output file: plotpaf.knit.md

/usr/bin/pandoc +RTS -K512m -RTS plotpaf.utf8.md --to html4 --from markdown+autolink_bare_uris+ascii_identifiers+tex_math_single_backslash --output f1chr2R.indexlr.n100-1000.c2-x.physlr.overlap.n30.mol.backbone.map.fly.n10.plotpaf.html --smart --email-obfuscation none --self-contained --standalone --section-divs --template /gsc/btl/linuxbrew/lib/R/3.5/site-library/rmarkdown/rmd/h/default.html --no-highlight --variable highlightjs=1 --variable 'theme:bootstrap' --include-in-header /var/tmp/RtmpJ7KAYO/rmarkdown-str178261aa8c842.html --mathjax --variable 'mathjax-url:https://mathjax.rstudio.com/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML' 

Output created: f1chr2R.indexlr.n100-1000.c2-x.physlr.overlap.n30.mol.backbone.map.fly.n10.plotpaf.html
Warning message:
In grDevices::png(f) : unable to open connection to X11 display ''
command gtime -v -o f1chr2R.indexlr.n100-1000.c2-x.physlr.overlap.n30.mol.backbone.map.f1.supernova.scaftigs.n10.bed.time env PYTHONPATH=.. pypy3 ../bin/physlr map -n10 f1chr2R.indexlr.n100-1000.c2-x.physlr.overlap.n30.mol.backbone.tsv f1chr2R.indexlr.n100-1000.c2-x.physlr.tsv f1.supernova.scaftigs.indexlr.physlr.tsv >f1chr2R.indexlr.n100-1000.c2-x.physlr.overlap.n30.mol.backbone.map.f1.supernova.scaftigs.n10.bed
0 Reading f1chr2R.indexlr.n100-1000.c2-x.physlr.overlap.n30.mol.backbone.tsv
 0.0% 00:00 ETA ?           100.0% 00:00 ETA 00:00 ██████████
0 Read f1chr2R.indexlr.n100-1000.c2-x.physlr.overlap.n30.mol.backbone.tsv
0 Reading f1chr2R.indexlr.n100-1000.c2-x.physlr.tsv
 0.0% 00:00 ETA ?            2.4% 00:01 ETA 00:41 ▏          4.8% 00:02 ETA 00:40 ▍          7.0% 00:03 ETA 00:39 ▋          9.6% 00:04 ETA 00:38 ▉         11.8% 00:05 ETA 00:37 █▏        14.3% 00:06 ETA 00:36 █▍        16.7% 00:07 ETA 00:35 █▋        19.2% 00:08 ETA 00:33 █▉        21.6% 00:09 ETA 00:32 ██▏       24.1% 00:10 ETA 00:31 ██▍       26.3% 00:11 ETA 00:30 ██▋       28.8% 00:12 ETA 00:29 ██▉       31.3% 00:13 ETA 00:28 ███▏      33.8% 00:14 ETA 00:27 ███▍      36.3% 00:15 ETA 00:26 ███▋      38.4% 00:16 ETA 00:25 ███▊      41.0% 00:17 ETA 00:24 ████      43.5% 00:18 ETA 00:23 ████▎     46.0% 00:19 ETA 00:22 ████▌     48.5% 00:20 ETA 00:21 ████▊     51.0% 00:21 ETA 00:20 █████     53.5% 00:22 ETA 00:19 █████▎    55.7% 00:23 ETA 00:18 █████▌    58.2% 00:24 ETA 00:17 █████▊    60.8% 00:25 ETA 00:16 ██████    63.3% 00:26 ETA 00:15 ██████▎   65.8% 00:27 ETA 00:14 ██████▌   68.3% 00:28 ETA 00:12 ██████▊   70.8% 00:29 ETA 00:11 ███████   73.2% 00:30 ETA 00:10 ███████▎  75.7% 00:31 ETA 00:09 ███████▌  78.1% 00:32 ETA 00:08 ███████▊  80.4% 00:33 ETA 00:08 ████████  83.0% 00:34 ETA 00:06 ████████▎ 85.5% 00:35 ETA 00:05 ████████▌ 88.0% 00:36 ETA 00:04 ████████▊ 90.5% 00:37 ETA 00:03 █████████ 93.0% 00:38 ETA 00:02 █████████▎95.5% 00:39 ETA 00:01 █████████▌98.0% 00:40 ETA 00:00 █████████▊100.0% 00:40 ETA 00:00 ██████████
41 Read f1chr2R.indexlr.n100-1000.c2-x.physlr.tsv
41 Reading f1.supernova.scaftigs.indexlr.physlr.tsv
 0.0% 00:00 ETA ?           16.9% 00:01 ETA 00:04 █▋        31.6% 00:02 ETA 00:04 ███▏      49.0% 00:03 ETA 00:03 ████▉     66.3% 00:04 ETA 00:02 ██████▋   84.3% 00:05 ETA 00:00 ████████▍ 100.0% 00:05 ETA 00:00 ██████████
47 Read f1.supernova.scaftigs.indexlr.physlr.tsv
47 Determined the backbone paths
 0.0% 00:00 ETA ?            1.2% 00:01 ETA 02:13            4.7% 00:03 ETA 02:00 ▍         100.0% 00:03 ETA 00:00 ██████████
51 Indexed 1413878 minimizers
 0.0% 00:00 ETA ?            7.7% 00:01 ETA 00:11 ▊         13.2% 00:02 ETA 00:11 █▎        15.1% 00:03 ETA 00:14 █▌        53.3% 00:04 ETA 00:07 █████▎    100.0% 00:04 ETA 00:00 ██████████
56 Mapped 1314 sequences of 5341 (24.6%)
sort -k1,1n -k1,1 -k2,2n -k3,3n -k5,5nr -k4,4 f1chr2R.indexlr.n100-1000.c2-x.physlr.overlap.n30.mol.backbone.map.f1.supernova.scaftigs.n10.bed >f1chr2R.indexlr.n100-1000.c2-x.physlr.overlap.n30.mol.backbone.map.f1.supernova.scaftigs.n10.sort.bed
awk '{ keep = $1 " " $2 " " $3 != x; x = $1 " " $2 " " $3 } keep' f1chr2R.indexlr.n100-1000.c2-x.physlr.overlap.n30.mol.backbone.map.f1.supernova.scaftigs.n10.sort.bed >f1chr2R.indexlr.n100-1000.c2-x.physlr.overlap.n30.mol.backbone.map.f1.supernova.scaftigs.n10.sort.best.bed
Rscript -e 'rmarkdown::render("plotbed.rmd", "html_document", "f1chr2R.indexlr.n100-1000.c2-x.physlr.overlap.n30.mol.backbone.map.f1.supernova.scaftigs.n10.sort.best.plotbed.html", params = list(input_bed="f1chr2R.indexlr.n100-1000.c2-x.physlr.overlap.n30.mol.backbone.map.f1.supernova.scaftigs.n10.sort.best.bed"))'


processing file: plotbed.rmd
  |                                                                         |                                                                 |   0%  |                                                                         |........                                                         |  12%
  ordinary text without R code

  |                                                                         |................                                                 |  25%
label: setup (with options) 
List of 1
 $ message: logi FALSE


Attaching package: 'dplyr'

The following objects are masked from 'package:stats':

    filter, lag

The following objects are masked from 'package:base':

    intersect, setdiff, setequal, union


Attaching package: 'scales'

The following object is masked from 'package:readr':

    col_factor

  |                                                                         |........................                                         |  38%
  ordinary text without R code

  |                                                                         |................................                                 |  50%
label: read-data
  |                                                                         |.........................................                        |  62%
  ordinary text without R code

  |                                                                         |.................................................                |  75%
label: plot-bed (with options) 
List of 2
 $ fig.height: num 6
 $ fig.width : num 6

  |                                                                         |.........................................................        |  88%
  ordinary text without R code

  |                                                                         |.................................................................| 100%
label: save-plot

output file: plotbed.knit.md

/usr/bin/pandoc +RTS -K512m -RTS plotbed.utf8.md --to html4 --from markdown+autolink_bare_uris+ascii_identifiers+tex_math_single_backslash --output f1chr2R.indexlr.n100-1000.c2-x.physlr.overlap.n30.mol.backbone.map.f1.supernova.scaftigs.n10.sort.best.plotbed.html --smart --email-obfuscation none --self-contained --standalone --section-divs --template /gsc/btl/linuxbrew/lib/R/3.5/site-library/rmarkdown/rmd/h/default.html --no-highlight --variable highlightjs=1 --variable 'theme:bootstrap' --include-in-header /var/tmp/RtmpKsitwH/rmarkdown-str178723328ecaa.html --mathjax --variable 'mathjax-url:https://mathjax.rstudio.com/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML' 

Output created: f1chr2R.indexlr.n100-1000.c2-x.physlr.overlap.n30.mol.backbone.map.f1.supernova.scaftigs.n10.sort.best.plotbed.html
Warning message:
In grDevices::png(f) : unable to open connection to X11 display ''
command gtime -v -o f1chr2R.indexlr.n100-1000.c2-x.physlr.overlap.n30.mol.backbone.map.f1.supernova.scaftigs.n10.sort.best.bed.path.time env PYTHONPATH=.. pypy3 ../bin/physlr bed-to-path f1chr2R.indexlr.n100-1000.c2-x.physlr.overlap.n30.mol.backbone.map.f1.supernova.scaftigs.n10.sort.best.bed >f1chr2R.indexlr.n100-1000.c2-x.physlr.overlap.n30.mol.backbone.map.f1.supernova.scaftigs.n10.sort.best.bed.path
0 Reading f1chr2R.indexlr.n100-1000.c2-x.physlr.overlap.n30.mol.backbone.map.f1.supernova.scaftigs.n10.sort.best.bed
 0.0% 00:00 ETA ?           100.0% 00:00 ETA 00:00 ██████████
0 Read f1chr2R.indexlr.n100-1000.c2-x.physlr.overlap.n30.mol.backbone.map.f1.supernova.scaftigs.n10.sort.best.bed
 0.0% 00:00 ETA ?           100.0% 00:00 ETA 00:00 ██████████
 0.0% 00:00 ETA ?           100.0% 00:00 ETA 00:00 ██████████
0 Ordered and oriented queries.
 0.0% 00:00 ETA ?           100.0% 00:00 ETA 00:00 ██████████
0 Wrote 392 contigs in 61 scaffolds.
command gtime -v -o f1chr2R.indexlr.n100-1000.c2-x.physlr.overlap.n30.mol.backbone.map.f1.supernova.scaftigs.n10.sort.best.bed.path.fa.time env PYTHONPATH=.. pypy3 ../bin/physlr path-to-fasta --min-length 100000 f1.supernova.scaftigs.fa f1chr2R.indexlr.n100-1000.c2-x.physlr.overlap.n30.mol.backbone.map.f1.supernova.scaftigs.n10.sort.best.bed.path >f1chr2R.indexlr.n100-1000.c2-x.physlr.overlap.n30.mol.backbone.map.f1.supernova.scaftigs.n10.sort.best.bed.path.fa
0 Reading f1.supernova.scaftigs.fa
2 Read 5345 sequences
2 Reading f1chr2R.indexlr.n100-1000.c2-x.physlr.overlap.n30.mol.backbone.map.f1.supernova.scaftigs.n10.sort.best.bed.path
 0.0% 00:00 ETA ?           100.0% 00:00 ETA 00:00 ██████████
2 Read f1chr2R.indexlr.n100-1000.c2-x.physlr.overlap.n30.mol.backbone.map.f1.supernova.scaftigs.n10.sort.best.bed.path
 0.0% 00:00 ETA ?           100.0% 00:00 ETA 00:00 ██████████
3 Wrote 18916002 bases in 178 contigs in 7 scaffolds.
command gtime -v -o f1chr2R.indexlr.n100-1000.c2-x.physlr.overlap.n30.mol.backbone.map.f1.supernova.scaftigs.n10.sort.best.bed.path.fly.paf.gz.time minimap2 -t16 -xasm10 fly/fly.fa f1chr2R.indexlr.n100-1000.c2-x.physlr.overlap.n30.mol.backbone.map.f1.supernova.scaftigs.n10.sort.best.bed.path.fa | pigz -p16 >f1chr2R.indexlr.n100-1000.c2-x.physlr.overlap.n30.mol.backbone.map.f1.supernova.scaftigs.n10.sort.best.bed.path.fly.paf.gz
[M::mm_idx_gen::3.475*1.25] collected minimizers
[M::mm_idx_gen::3.765*1.73] sorted minimizers
[M::main::3.765*1.73] loaded/built the index for 8 target sequence(s)
[M::mm_mapopt_update::3.953*1.69] mid_occ = 100
[M::mm_idx_stat] kmer size: 19; skip: 19; is_hpc: 0; #seq: 8
[M::mm_idx_stat::4.100*1.67] distinct minimizers: 11819469 (96.79% are singletons); average occurrences: 1.161; average spacing: 10.023
[M::worker_pipeline::5.626*1.65] mapped 7 sequences
[M::main] Version: 2.15-r905
[M::main] CMD: minimap2 -t16 -xasm10 fly/fly.fa f1chr2R.indexlr.n100-1000.c2-x.physlr.overlap.n30.mol.backbone.map.f1.supernova.scaftigs.n10.sort.best.bed.path.fa
[M::main] Real time: 5.776 sec; CPU: 9.408 sec; Peak RSS: 0.744 GB
pigz -p16 -cd f1chr2R.indexlr.n100-1000.c2-x.physlr.overlap.n30.mol.backbone.map.f1.supernova.scaftigs.n10.sort.best.bed.path.fly.paf.gz | grep -v NW_ | minidot /dev/stdin | ps2pdf - f1chr2R.indexlr.n100-1000.c2-x.physlr.overlap.n30.mol.backbone.map.f1.supernova.scaftigs.n10.sort.best.bed.path.fly.minidot.pdf
make: Leaving directory `/projects/btl/gdilek/physlr/data'
49389.90user 1119.72system 2:13:43elapsed 629%CPU (0avgtext+0avgdata 23626512maxresident)k
10928inputs+79458840outputs (50major+560453464minor)pagefaults 0swaps
